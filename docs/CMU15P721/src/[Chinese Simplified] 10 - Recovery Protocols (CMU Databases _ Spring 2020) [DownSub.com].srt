1
00:00:01,300 --> 00:00:05,129


2
00:00:05,200 --> 00:00:05,930


3
00:00:05,930 --> 00:00:08,630


4
00:00:08,630 --> 00:00:10,020


5
00:00:10,020 --> 00:00:11,179


6
00:00:11,179 --> 00:00:14,549


7
00:00:14,549 --> 00:00:16,859


8
00:00:16,859 --> 00:00:20,189


9
00:00:20,189 --> 00:00:22,789


10
00:00:22,789 --> 00:00:24,990


11
00:00:24,990 --> 00:00:27,480


12
00:00:27,480 --> 00:00:28,470


13
00:00:28,470 --> 00:00:31,740


14
00:00:31,740 --> 00:00:34,110


15
00:00:34,110 --> 00:00:35,820


16
00:00:35,820 --> 00:00:38,070


17
00:00:38,070 --> 00:00:40,320


18
00:00:40,320 --> 00:00:42,059


19
00:00:42,059 --> 00:00:43,739


20
00:00:43,739 --> 00:00:47,489


21
00:00:47,489 --> 00:00:49,170


22
00:00:49,170 --> 00:00:52,020


23
00:00:52,020 --> 00:00:53,550


24
00:00:53,550 --> 00:00:54,870


25
00:00:54,870 --> 00:00:56,760


26
00:00:56,760 --> 00:00:58,109


27
00:00:58,109 --> 00:00:59,820


28
00:00:59,820 --> 00:01:01,770


29
00:01:01,770 --> 00:01:03,270


30
00:01:03,270 --> 00:01:05,939


31
00:01:05,939 --> 00:01:08,490


32
00:01:08,490 --> 00:01:10,290


33
00:01:10,290 --> 00:01:12,240


34
00:01:12,240 --> 00:01:14,100


35
00:01:14,100 --> 00:01:15,750


36
00:01:15,750 --> 00:01:17,520


37
00:01:17,520 --> 00:01:20,549


38
00:01:20,549 --> 00:01:21,840


39
00:01:21,840 --> 00:01:23,670


40
00:01:23,670 --> 00:01:25,409


41
00:01:25,409 --> 00:01:27,630


42
00:01:27,630 --> 00:01:29,939


43
00:01:29,939 --> 00:01:31,229


44
00:01:31,229 --> 00:01:32,369


45
00:01:32,369 --> 00:01:34,320


46
00:01:34,320 --> 00:01:36,270


47
00:01:36,270 --> 00:01:37,740


48
00:01:37,740 --> 00:01:42,630


49
00:01:42,630 --> 00:01:46,049


50
00:01:46,049 --> 00:01:47,759


51
00:01:47,759 --> 00:01:49,500


52
00:01:49,500 --> 00:01:51,240


53
00:01:51,240 --> 00:01:54,600


54
00:01:54,600 --> 00:01:57,659


55
00:01:57,659 --> 00:01:59,310


56
00:01:59,310 --> 00:02:01,290


57
00:02:01,290 --> 00:02:03,390


58
00:02:03,390 --> 00:02:06,509


59
00:02:06,509 --> 00:02:08,220


60
00:02:08,220 --> 00:02:10,889


61
00:02:10,889 --> 00:02:12,569


62
00:02:12,569 --> 00:02:13,350


63
00:02:13,350 --> 00:02:14,370


64
00:02:14,370 --> 00:02:16,710


65
00:02:16,710 --> 00:02:18,060


66
00:02:18,060 --> 00:02:20,160


67
00:02:20,160 --> 00:02:21,690


68
00:02:21,690 --> 00:02:22,980


69
00:02:22,980 --> 00:02:25,290


70
00:02:25,290 --> 00:02:28,530


71
00:02:28,530 --> 00:02:30,330


72
00:02:30,330 --> 00:02:33,420


73
00:02:33,420 --> 00:02:35,730


74
00:02:35,730 --> 00:02:37,110


75
00:02:37,110 --> 00:02:38,310


76
00:02:38,310 --> 00:02:39,330


77
00:02:39,330 --> 00:02:42,630


78
00:02:42,630 --> 00:02:44,490


79
00:02:44,490 --> 00:02:46,350


80
00:02:46,350 --> 00:02:49,770


81
00:02:49,770 --> 00:02:50,790


82
00:02:50,790 --> 00:02:53,070


83
00:02:53,070 --> 00:02:54,270


84
00:02:54,270 --> 00:02:56,280


85
00:02:56,280 --> 00:02:57,750


86
00:02:57,750 --> 00:03:00,180


87
00:03:00,180 --> 00:03:01,920


88
00:03:01,920 --> 00:03:03,420


89
00:03:03,420 --> 00:03:06,540


90
00:03:06,540 --> 00:03:08,460


91
00:03:08,460 --> 00:03:11,850


92
00:03:11,850 --> 00:03:13,530


93
00:03:13,530 --> 00:03:15,360


94
00:03:15,360 --> 00:03:18,300


95
00:03:18,300 --> 00:03:20,790


96
00:03:20,790 --> 00:03:22,440


97
00:03:22,440 --> 00:03:24,690


98
00:03:24,690 --> 00:03:26,940


99
00:03:26,940 --> 00:03:28,740


100
00:03:28,740 --> 00:03:30,840


101
00:03:30,840 --> 00:03:32,760


102
00:03:32,760 --> 00:03:35,940


103
00:03:35,940 --> 00:03:40,940


104
00:03:42,620 --> 00:03:46,340


105
00:03:46,340 --> 00:03:49,230


106
00:03:49,230 --> 00:03:50,730


107
00:03:50,730 --> 00:03:52,320


108
00:03:52,320 --> 00:03:53,460


109
00:03:53,460 --> 00:03:55,500


110
00:03:55,500 --> 00:03:57,930


111
00:03:57,930 --> 00:04:00,900


112
00:04:00,900 --> 00:04:02,520


113
00:04:02,520 --> 00:04:04,010


114
00:04:04,010 --> 00:04:06,330


115
00:04:06,330 --> 00:04:08,940


116
00:04:08,940 --> 00:04:10,590


117
00:04:10,590 --> 00:04:12,060


118
00:04:12,060 --> 00:04:14,540


119
00:04:14,540 --> 00:04:16,260


120
00:04:16,260 --> 00:04:18,060


121
00:04:18,060 --> 00:04:19,529


122
00:04:19,529 --> 00:04:21,930


123
00:04:21,930 --> 00:04:24,020


124
00:04:24,020 --> 00:04:27,000


125
00:04:27,000 --> 00:04:27,930


126
00:04:27,930 --> 00:04:30,210


127
00:04:30,210 --> 00:04:32,580


128
00:04:32,580 --> 00:04:34,770


129
00:04:34,770 --> 00:04:36,150


130
00:04:36,150 --> 00:04:38,250


131
00:04:38,250 --> 00:04:41,970


132
00:04:41,970 --> 00:04:45,690


133
00:04:45,690 --> 00:04:46,830


134
00:04:46,830 --> 00:04:48,510


135
00:04:48,510 --> 00:04:50,340


136
00:04:50,340 --> 00:04:53,070


137
00:04:53,070 --> 00:04:54,810


138
00:04:54,810 --> 00:04:56,880


139
00:04:56,880 --> 00:04:58,290


140
00:04:58,290 --> 00:05:01,140


141
00:05:01,140 --> 00:05:04,350


142
00:05:04,350 --> 00:05:06,390


143
00:05:06,390 --> 00:05:08,370


144
00:05:08,370 --> 00:05:10,800


145
00:05:10,800 --> 00:05:13,470


146
00:05:13,470 --> 00:05:15,900


147
00:05:15,900 --> 00:05:17,490


148
00:05:17,490 --> 00:05:19,740


149
00:05:19,740 --> 00:05:22,110


150
00:05:22,110 --> 00:05:23,520


151
00:05:23,520 --> 00:05:25,380


152
00:05:25,380 --> 00:05:27,660


153
00:05:27,660 --> 00:05:29,400


154
00:05:29,400 --> 00:05:30,960


155
00:05:30,960 --> 00:05:31,920


156
00:05:31,920 --> 00:05:33,270


157
00:05:33,270 --> 00:05:35,190


158
00:05:35,190 --> 00:05:37,560


159
00:05:37,560 --> 00:05:39,510


160
00:05:39,510 --> 00:05:43,380


161
00:05:43,380 --> 00:05:46,290


162
00:05:46,290 --> 00:05:48,420


163
00:05:48,420 --> 00:05:49,760


164
00:05:49,760 --> 00:05:53,550


165
00:05:53,550 --> 00:05:55,380


166
00:05:55,380 --> 00:05:57,810


167
00:05:57,810 --> 00:05:59,220


168
00:05:59,220 --> 00:06:01,830


169
00:06:01,830 --> 00:06:03,360


170
00:06:03,360 --> 00:06:05,310


171
00:06:05,310 --> 00:06:06,980


172
00:06:06,980 --> 00:06:10,100


173
00:06:10,100 --> 00:06:12,780


174
00:06:12,780 --> 00:06:15,270


175
00:06:15,270 --> 00:06:16,320


176
00:06:16,320 --> 00:06:17,670


177
00:06:17,670 --> 00:06:19,800


178
00:06:19,800 --> 00:06:22,740


179
00:06:22,740 --> 00:06:24,920


180
00:06:24,920 --> 00:06:26,760


181
00:06:26,760 --> 00:06:30,000


182
00:06:30,000 --> 00:06:31,950


183
00:06:31,950 --> 00:06:33,750


184
00:06:33,750 --> 00:06:34,980


185
00:06:34,980 --> 00:06:36,990


186
00:06:36,990 --> 00:06:38,610


187
00:06:38,610 --> 00:06:41,340


188
00:06:41,340 --> 00:06:42,450


189
00:06:42,450 --> 00:06:44,880


190
00:06:44,880 --> 00:06:46,890


191
00:06:46,890 --> 00:06:48,180


192
00:06:48,180 --> 00:06:49,260


193
00:06:49,260 --> 00:06:51,360


194
00:06:51,360 --> 00:06:53,370


195
00:06:53,370 --> 00:06:54,930


196
00:06:54,930 --> 00:06:56,280


197
00:06:56,280 --> 00:06:57,390


198
00:06:57,390 --> 00:06:59,160


199
00:06:59,160 --> 00:07:00,990


200
00:07:00,990 --> 00:07:02,550


201
00:07:02,550 --> 00:07:03,780


202
00:07:03,780 --> 00:07:05,150


203
00:07:05,150 --> 00:07:09,690


204
00:07:09,690 --> 00:07:11,940


205
00:07:11,940 --> 00:07:13,770


206
00:07:13,770 --> 00:07:16,380


207
00:07:16,380 --> 00:07:18,390


208
00:07:18,390 --> 00:07:19,710


209
00:07:19,710 --> 00:07:23,280


210
00:07:23,280 --> 00:07:24,840


211
00:07:24,840 --> 00:07:26,580


212
00:07:26,580 --> 00:07:28,350


213
00:07:28,350 --> 00:07:32,820


214
00:07:32,820 --> 00:07:34,620


215
00:07:34,620 --> 00:07:36,240


216
00:07:36,240 --> 00:07:38,600


217
00:07:38,600 --> 00:07:41,130


218
00:07:41,130 --> 00:07:43,110


219
00:07:43,110 --> 00:07:44,490


220
00:07:44,490 --> 00:07:47,130


221
00:07:47,130 --> 00:07:49,230


222
00:07:49,230 --> 00:07:52,470


223
00:07:52,470 --> 00:07:55,290


224
00:07:55,290 --> 00:07:56,550


225
00:07:56,550 --> 00:07:57,780


226
00:07:57,780 --> 00:08:00,060


227
00:08:00,060 --> 00:08:01,890


228
00:08:01,890 --> 00:08:04,410


229
00:08:04,410 --> 00:08:06,200


230
00:08:06,200 --> 00:08:08,700


231
00:08:08,700 --> 00:08:10,560


232
00:08:10,560 --> 00:08:12,720


233
00:08:12,720 --> 00:08:13,770


234
00:08:13,770 --> 00:08:15,780


235
00:08:15,780 --> 00:08:17,760


236
00:08:17,760 --> 00:08:19,290


237
00:08:19,290 --> 00:08:21,600


238
00:08:21,600 --> 00:08:24,030


239
00:08:24,030 --> 00:08:25,530


240
00:08:25,530 --> 00:08:30,090


241
00:08:30,090 --> 00:08:32,159


242
00:08:32,159 --> 00:08:34,970


243
00:08:34,970 --> 00:08:37,409


244
00:08:37,409 --> 00:08:40,200


245
00:08:40,200 --> 00:08:41,970


246
00:08:41,970 --> 00:08:44,010


247
00:08:44,010 --> 00:08:45,330


248
00:08:45,330 --> 00:08:46,590


249
00:08:46,590 --> 00:08:49,260


250
00:08:49,260 --> 00:08:51,240


251
00:08:51,240 --> 00:08:53,820


252
00:08:53,820 --> 00:08:55,100


253
00:08:55,100 --> 00:08:56,839


254
00:08:56,839 --> 00:09:00,290


255
00:09:00,290 --> 00:09:01,430


256
00:09:01,430 --> 00:09:03,769


257
00:09:03,769 --> 00:09:08,360


258
00:09:08,360 --> 00:09:10,459


259
00:09:10,459 --> 00:09:11,720


260
00:09:11,720 --> 00:09:14,209


261
00:09:14,209 --> 00:09:16,819


262
00:09:16,819 --> 00:09:18,649


263
00:09:18,649 --> 00:09:19,790


264
00:09:19,790 --> 00:09:21,889


265
00:09:21,889 --> 00:09:23,870


266
00:09:23,870 --> 00:09:26,089


267
00:09:26,089 --> 00:09:27,980


268
00:09:27,980 --> 00:09:30,470


269
00:09:30,470 --> 00:09:31,970


270
00:09:31,970 --> 00:09:34,670


271
00:09:34,670 --> 00:09:36,290


272
00:09:36,290 --> 00:09:38,120


273
00:09:38,120 --> 00:09:41,569


274
00:09:41,569 --> 00:09:42,920


275
00:09:42,920 --> 00:09:44,269


276
00:09:44,269 --> 00:09:46,160


277
00:09:46,160 --> 00:09:47,569


278
00:09:47,569 --> 00:09:49,190


279
00:09:49,190 --> 00:09:51,170


280
00:09:51,170 --> 00:09:53,720


281
00:09:53,720 --> 00:09:55,699


282
00:09:55,699 --> 00:09:58,550


283
00:09:58,550 --> 00:09:59,930


284
00:09:59,930 --> 00:10:02,870


285
00:10:02,870 --> 00:10:04,759


286
00:10:04,759 --> 00:10:07,550


287
00:10:07,550 --> 00:10:08,899


288
00:10:08,899 --> 00:10:10,970


289
00:10:10,970 --> 00:10:13,040


290
00:10:13,040 --> 00:10:16,160


291
00:10:16,160 --> 00:10:18,560


292
00:10:18,560 --> 00:10:20,170


293
00:10:20,170 --> 00:10:21,920


294
00:10:21,920 --> 00:10:24,050


295
00:10:24,050 --> 00:10:26,779


296
00:10:26,779 --> 00:10:28,399


297
00:10:28,399 --> 00:10:30,410


298
00:10:30,410 --> 00:10:34,100


299
00:10:34,100 --> 00:10:36,230


300
00:10:36,230 --> 00:10:38,870


301
00:10:38,870 --> 00:10:41,689


302
00:10:41,689 --> 00:10:43,310


303
00:10:43,310 --> 00:10:44,779


304
00:10:44,779 --> 00:10:46,160


305
00:10:46,160 --> 00:10:47,720


306
00:10:47,720 --> 00:10:49,610


307
00:10:49,610 --> 00:10:52,220


308
00:10:52,220 --> 00:10:54,350


309
00:10:54,350 --> 00:10:55,730


310
00:10:55,730 --> 00:10:57,470


311
00:10:57,470 --> 00:11:00,170


312
00:11:00,170 --> 00:11:02,720


313
00:11:02,720 --> 00:11:04,309


314
00:11:04,309 --> 00:11:05,510


315
00:11:05,510 --> 00:11:07,130


316
00:11:07,130 --> 00:11:08,240


317
00:11:08,240 --> 00:11:08,720


318
00:11:08,720 --> 00:11:09,889


319
00:11:09,889 --> 00:11:13,060


320
00:11:14,589 --> 00:11:26,360


321
00:11:26,360 --> 00:11:36,050


322
00:11:36,050 --> 00:11:40,220


323
00:11:40,220 --> 00:11:43,430


324
00:11:43,430 --> 00:11:46,069


325
00:11:46,069 --> 00:11:48,189


326
00:11:48,189 --> 00:11:52,730


327
00:11:52,730 --> 00:11:54,529


328
00:11:54,529 --> 00:11:57,860


329
00:11:57,860 --> 00:11:59,360


330
00:11:59,360 --> 00:12:01,189


331
00:12:01,189 --> 00:12:03,079


332
00:12:03,079 --> 00:12:05,120


333
00:12:05,120 --> 00:12:06,829


334
00:12:06,829 --> 00:12:08,149


335
00:12:08,149 --> 00:12:10,339


336
00:12:10,339 --> 00:12:12,259


337
00:12:12,259 --> 00:12:13,399


338
00:12:13,399 --> 00:12:17,149


339
00:12:17,149 --> 00:12:18,439


340
00:12:18,439 --> 00:12:20,779


341
00:12:20,779 --> 00:12:22,759


342
00:12:22,759 --> 00:12:24,709


343
00:12:24,709 --> 00:12:26,660


344
00:12:26,660 --> 00:12:29,300


345
00:12:29,300 --> 00:12:30,889


346
00:12:30,889 --> 00:12:33,139


347
00:12:33,139 --> 00:12:34,250


348
00:12:34,250 --> 00:12:36,019


349
00:12:36,019 --> 00:12:37,279


350
00:12:37,279 --> 00:12:39,709


351
00:12:39,709 --> 00:12:41,569


352
00:12:41,569 --> 00:12:43,399


353
00:12:43,399 --> 00:12:45,290


354
00:12:45,290 --> 00:12:46,730


355
00:12:46,730 --> 00:12:48,350


356
00:12:48,350 --> 00:12:49,399


357
00:12:49,399 --> 00:12:51,019


358
00:12:51,019 --> 00:12:53,870


359
00:12:53,870 --> 00:12:56,120


360
00:12:56,120 --> 00:12:57,559


361
00:12:57,559 --> 00:12:59,089


362
00:12:59,089 --> 00:13:01,910


363
00:13:01,910 --> 00:13:05,149


364
00:13:05,149 --> 00:13:07,490


365
00:13:07,490 --> 00:13:11,059


366
00:13:11,059 --> 00:13:12,319


367
00:13:12,319 --> 00:13:13,699


368
00:13:13,699 --> 00:13:16,339


369
00:13:16,339 --> 00:13:19,429


370
00:13:19,429 --> 00:13:21,889


371
00:13:21,889 --> 00:13:22,610


372
00:13:22,610 --> 00:13:25,549


373
00:13:25,549 --> 00:13:28,369


374
00:13:28,369 --> 00:13:29,869


375
00:13:29,869 --> 00:13:31,959


376
00:13:31,959 --> 00:13:34,279


377
00:13:34,279 --> 00:13:35,929


378
00:13:35,929 --> 00:13:37,579


379
00:13:37,579 --> 00:13:39,739


380
00:13:39,739 --> 00:13:42,739


381
00:13:42,739 --> 00:13:43,970


382
00:13:43,970 --> 00:13:45,139


383
00:13:45,139 --> 00:13:46,699


384
00:13:46,699 --> 00:13:48,290


385
00:13:48,290 --> 00:13:49,610


386
00:13:49,610 --> 00:13:51,410


387
00:13:51,410 --> 00:13:53,329


388
00:13:53,329 --> 00:13:55,069


389
00:13:55,069 --> 00:13:56,480


390
00:13:56,480 --> 00:13:59,089


391
00:13:59,089 --> 00:14:00,259


392
00:14:00,259 --> 00:14:01,639


393
00:14:01,639 --> 00:14:05,119


394
00:14:05,119 --> 00:14:07,339


395
00:14:07,339 --> 00:14:09,319


396
00:14:09,319 --> 00:14:10,939


397
00:14:10,939 --> 00:14:12,980


398
00:14:12,980 --> 00:14:14,420


399
00:14:14,420 --> 00:14:15,709


400
00:14:15,709 --> 00:14:20,029


401
00:14:20,029 --> 00:14:22,220


402
00:14:22,220 --> 00:14:26,209


403
00:14:26,209 --> 00:14:29,059


404
00:14:29,059 --> 00:14:30,529


405
00:14:30,529 --> 00:14:33,860


406
00:14:33,860 --> 00:14:37,549


407
00:14:37,549 --> 00:14:39,319


408
00:14:39,319 --> 00:14:40,579


409
00:14:40,579 --> 00:14:42,259


410
00:14:42,259 --> 00:14:44,209


411
00:14:44,209 --> 00:14:46,879


412
00:14:46,879 --> 00:14:51,199


413
00:14:51,199 --> 00:14:52,579


414
00:14:52,579 --> 00:14:54,829


415
00:14:54,829 --> 00:14:57,439


416
00:14:57,439 --> 00:14:59,449


417
00:14:59,449 --> 00:15:02,179


418
00:15:02,179 --> 00:15:04,309


419
00:15:04,309 --> 00:15:07,610


420
00:15:07,610 --> 00:15:09,799


421
00:15:09,799 --> 00:15:12,470


422
00:15:12,470 --> 00:15:14,720


423
00:15:14,720 --> 00:15:17,629


424
00:15:17,629 --> 00:15:19,189


425
00:15:19,189 --> 00:15:20,779


426
00:15:20,779 --> 00:15:22,850


427
00:15:22,850 --> 00:15:26,329


428
00:15:26,329 --> 00:15:30,769


429
00:15:30,769 --> 00:15:32,179


430
00:15:32,179 --> 00:15:35,990


431
00:15:35,990 --> 00:15:37,820


432
00:15:37,820 --> 00:15:39,830


433
00:15:39,830 --> 00:15:41,480


434
00:15:41,480 --> 00:15:45,529


435
00:15:45,529 --> 00:15:47,839


436
00:15:47,839 --> 00:15:49,490


437
00:15:49,490 --> 00:15:53,149


438
00:15:53,149 --> 00:15:55,070


439
00:15:55,070 --> 00:15:57,050


440
00:15:57,050 --> 00:15:59,360


441
00:15:59,360 --> 00:16:01,580


442
00:16:01,580 --> 00:16:04,790


443
00:16:04,790 --> 00:16:07,760


444
00:16:07,760 --> 00:16:09,970


445
00:16:09,970 --> 00:16:12,709


446
00:16:12,709 --> 00:16:14,720


447
00:16:14,720 --> 00:16:17,240


448
00:16:17,240 --> 00:16:18,560


449
00:16:18,560 --> 00:16:20,089


450
00:16:20,089 --> 00:16:21,380


451
00:16:21,380 --> 00:16:24,500


452
00:16:24,500 --> 00:16:25,820


453
00:16:25,820 --> 00:16:28,130


454
00:16:28,130 --> 00:16:29,209


455
00:16:29,209 --> 00:16:32,779


456
00:16:32,779 --> 00:16:34,490


457
00:16:34,490 --> 00:16:36,980


458
00:16:36,980 --> 00:16:39,020


459
00:16:39,020 --> 00:16:41,750


460
00:16:41,750 --> 00:16:43,970


461
00:16:43,970 --> 00:16:45,380


462
00:16:45,380 --> 00:16:47,660


463
00:16:47,660 --> 00:16:50,000


464
00:16:50,000 --> 00:16:51,950


465
00:16:51,950 --> 00:16:54,680


466
00:16:54,680 --> 00:16:56,300


467
00:16:56,300 --> 00:16:59,060


468
00:16:59,060 --> 00:17:00,410


469
00:17:00,410 --> 00:17:01,970


470
00:17:01,970 --> 00:17:04,400


471
00:17:04,400 --> 00:17:06,319


472
00:17:06,319 --> 00:17:07,910


473
00:17:07,910 --> 00:17:08,959


474
00:17:08,959 --> 00:17:10,640


475
00:17:10,640 --> 00:17:15,140


476
00:17:15,140 --> 00:17:17,720


477
00:17:17,720 --> 00:17:20,150


478
00:17:20,150 --> 00:17:22,579


479
00:17:22,579 --> 00:17:24,679


480
00:17:24,679 --> 00:17:27,920


481
00:17:27,920 --> 00:17:30,590


482
00:17:30,590 --> 00:17:33,470


483
00:17:33,470 --> 00:17:36,500


484
00:17:36,500 --> 00:17:38,630


485
00:17:38,630 --> 00:17:39,620


486
00:17:39,620 --> 00:17:41,660


487
00:17:41,660 --> 00:17:43,580


488
00:17:43,580 --> 00:17:45,380


489
00:17:45,380 --> 00:17:49,550


490
00:17:49,550 --> 00:17:51,950


491
00:17:51,950 --> 00:17:53,090


492
00:17:53,090 --> 00:17:54,710


493
00:17:54,710 --> 00:17:56,450


494
00:17:56,450 --> 00:17:57,950


495
00:17:57,950 --> 00:18:00,620


496
00:18:00,620 --> 00:18:03,290


497
00:18:03,290 --> 00:18:05,030


498
00:18:05,030 --> 00:18:07,700


499
00:18:07,700 --> 00:18:11,780


500
00:18:11,780 --> 00:18:13,490


501
00:18:13,490 --> 00:18:16,130


502
00:18:16,130 --> 00:18:19,160


503
00:18:19,160 --> 00:18:20,330


504
00:18:20,330 --> 00:18:22,370


505
00:18:22,370 --> 00:18:26,060


506
00:18:26,060 --> 00:18:27,740


507
00:18:27,740 --> 00:18:30,590


508
00:18:30,590 --> 00:18:32,000


509
00:18:32,000 --> 00:18:32,990


510
00:18:32,990 --> 00:18:34,040


511
00:18:34,040 --> 00:18:37,130


512
00:18:37,130 --> 00:18:39,200


513
00:18:39,200 --> 00:18:40,580


514
00:18:40,580 --> 00:18:42,770


515
00:18:42,770 --> 00:18:45,560


516
00:18:45,560 --> 00:18:47,870


517
00:18:47,870 --> 00:18:50,060


518
00:18:50,060 --> 00:18:51,500


519
00:18:51,500 --> 00:18:53,780


520
00:18:53,780 --> 00:18:55,910


521
00:18:55,910 --> 00:18:58,370


522
00:18:58,370 --> 00:19:00,830


523
00:19:00,830 --> 00:19:02,480


524
00:19:02,480 --> 00:19:05,360


525
00:19:05,360 --> 00:19:07,550


526
00:19:07,550 --> 00:19:09,410


527
00:19:09,410 --> 00:19:11,750


528
00:19:11,750 --> 00:19:14,300


529
00:19:14,300 --> 00:19:16,220


530
00:19:16,220 --> 00:19:19,370


531
00:19:19,370 --> 00:19:21,910


532
00:19:21,910 --> 00:19:24,560


533
00:19:24,560 --> 00:19:27,020


534
00:19:27,020 --> 00:19:29,240


535
00:19:29,240 --> 00:19:31,700


536
00:19:31,700 --> 00:19:34,190


537
00:19:34,190 --> 00:19:37,280


538
00:19:37,280 --> 00:19:38,990


539
00:19:38,990 --> 00:19:40,670


540
00:19:40,670 --> 00:19:43,040


541
00:19:43,040 --> 00:19:46,100


542
00:19:46,100 --> 00:19:48,980


543
00:19:48,980 --> 00:19:51,530


544
00:19:51,530 --> 00:19:53,900


545
00:19:53,900 --> 00:19:56,270


546
00:19:56,270 --> 00:19:57,650


547
00:19:57,650 --> 00:20:00,140


548
00:20:00,140 --> 00:20:01,370


549
00:20:01,370 --> 00:20:02,560


550
00:20:02,560 --> 00:20:06,550


551
00:20:06,550 --> 00:20:08,950


552
00:20:08,950 --> 00:20:11,950


553
00:20:11,950 --> 00:20:13,210


554
00:20:13,210 --> 00:20:15,040


555
00:20:15,040 --> 00:20:17,140


556
00:20:17,140 --> 00:20:19,870


557
00:20:19,870 --> 00:20:21,460


558
00:20:21,460 --> 00:20:22,330


559
00:20:22,330 --> 00:20:25,480


560
00:20:25,480 --> 00:20:27,130


561
00:20:27,130 --> 00:20:28,750


562
00:20:28,750 --> 00:20:30,700


563
00:20:30,700 --> 00:20:32,820


564
00:20:32,820 --> 00:20:35,620


565
00:20:35,620 --> 00:20:37,090


566
00:20:37,090 --> 00:20:39,880


567
00:20:39,880 --> 00:20:41,800


568
00:20:41,800 --> 00:20:43,180


569
00:20:43,180 --> 00:20:45,010


570
00:20:45,010 --> 00:20:46,990


571
00:20:46,990 --> 00:20:50,620


572
00:20:50,620 --> 00:20:52,570


573
00:20:52,570 --> 00:20:54,550


574
00:20:54,550 --> 00:20:56,110


575
00:20:56,110 --> 00:20:57,400


576
00:20:57,400 --> 00:20:59,800


577
00:20:59,800 --> 00:21:01,300


578
00:21:01,300 --> 00:21:03,580


579
00:21:03,580 --> 00:21:05,050


580
00:21:05,050 --> 00:21:07,300


581
00:21:07,300 --> 00:21:11,560


582
00:21:11,560 --> 00:21:13,000


583
00:21:13,000 --> 00:21:14,770


584
00:21:14,770 --> 00:21:18,490


585
00:21:18,490 --> 00:21:19,480


586
00:21:19,480 --> 00:21:21,010


587
00:21:21,010 --> 00:21:24,970


588
00:21:24,970 --> 00:21:26,200


589
00:21:26,200 --> 00:21:28,300


590
00:21:28,300 --> 00:21:30,220


591
00:21:30,220 --> 00:21:32,380


592
00:21:32,380 --> 00:21:34,000


593
00:21:34,000 --> 00:21:36,970


594
00:21:36,970 --> 00:21:39,580


595
00:21:39,580 --> 00:21:42,280


596
00:21:42,280 --> 00:21:44,620


597
00:21:44,620 --> 00:21:46,810


598
00:21:46,810 --> 00:21:49,390


599
00:21:49,390 --> 00:21:52,480


600
00:21:52,480 --> 00:21:53,920


601
00:21:53,920 --> 00:21:55,540


602
00:21:55,540 --> 00:21:56,440


603
00:21:56,440 --> 00:21:58,150


604
00:21:58,150 --> 00:22:00,970


605
00:22:00,970 --> 00:22:02,350


606
00:22:02,350 --> 00:22:03,520


607
00:22:03,520 --> 00:22:05,620


608
00:22:05,620 --> 00:22:07,600


609
00:22:07,600 --> 00:22:09,280


610
00:22:09,280 --> 00:22:11,260


611
00:22:11,260 --> 00:22:12,790


612
00:22:12,790 --> 00:22:14,770


613
00:22:14,770 --> 00:22:15,750


614
00:22:15,750 --> 00:22:17,730


615
00:22:17,730 --> 00:22:19,560


616
00:22:19,560 --> 00:22:20,850


617
00:22:20,850 --> 00:22:22,560


618
00:22:22,560 --> 00:22:24,360


619
00:22:24,360 --> 00:22:25,440


620
00:22:25,440 --> 00:22:28,100


621
00:22:28,100 --> 00:22:31,170


622
00:22:31,170 --> 00:22:34,740


623
00:22:34,740 --> 00:22:36,630


624
00:22:36,630 --> 00:22:38,190


625
00:22:38,190 --> 00:22:39,570


626
00:22:39,570 --> 00:22:43,250


627
00:22:43,250 --> 00:22:46,110


628
00:22:46,110 --> 00:22:48,300


629
00:22:48,300 --> 00:22:49,470


630
00:22:49,470 --> 00:22:51,330


631
00:22:51,330 --> 00:22:52,770


632
00:22:52,770 --> 00:22:54,240


633
00:22:54,240 --> 00:22:55,470


634
00:22:55,470 --> 00:22:58,020


635
00:22:58,020 --> 00:22:59,310


636
00:22:59,310 --> 00:23:00,960


637
00:23:00,960 --> 00:23:03,120


638
00:23:03,120 --> 00:23:06,300


639
00:23:06,300 --> 00:23:09,450


640
00:23:09,450 --> 00:23:11,520


641
00:23:11,520 --> 00:23:13,320


642
00:23:13,320 --> 00:23:15,030


643
00:23:15,030 --> 00:23:16,920


644
00:23:16,920 --> 00:23:18,510


645
00:23:18,510 --> 00:23:21,060


646
00:23:21,060 --> 00:23:23,070


647
00:23:23,070 --> 00:23:25,020


648
00:23:25,020 --> 00:23:26,880


649
00:23:26,880 --> 00:23:29,100


650
00:23:29,100 --> 00:23:30,930


651
00:23:30,930 --> 00:23:32,610


652
00:23:32,610 --> 00:23:37,860


653
00:23:37,860 --> 00:23:39,150


654
00:23:39,150 --> 00:23:41,340


655
00:23:41,340 --> 00:23:42,900


656
00:23:42,900 --> 00:23:46,590


657
00:23:46,590 --> 00:23:48,300


658
00:23:48,300 --> 00:23:51,420


659
00:23:51,420 --> 00:23:53,040


660
00:23:53,040 --> 00:23:54,900


661
00:23:54,900 --> 00:23:58,650


662
00:23:58,650 --> 00:24:00,660


663
00:24:00,660 --> 00:24:03,360


664
00:24:03,360 --> 00:24:04,980


665
00:24:04,980 --> 00:24:06,240


666
00:24:06,240 --> 00:24:10,580


667
00:24:16,200 --> 00:24:18,520


668
00:24:18,520 --> 00:24:20,410


669
00:24:20,410 --> 00:24:23,500


670
00:24:23,500 --> 00:24:25,920


671
00:24:25,920 --> 00:24:28,690


672
00:24:28,690 --> 00:24:30,340


673
00:24:30,340 --> 00:24:32,620


674
00:24:32,620 --> 00:24:33,280


675
00:24:33,280 --> 00:24:34,750


676
00:24:34,750 --> 00:24:37,060


677
00:24:37,060 --> 00:24:40,500


678
00:24:45,030 --> 00:24:48,040


679
00:24:48,040 --> 00:24:49,840


680
00:24:49,840 --> 00:24:52,870


681
00:24:52,870 --> 00:24:55,170


682
00:24:55,170 --> 00:24:57,970


683
00:24:57,970 --> 00:25:00,280


684
00:25:00,280 --> 00:25:01,690


685
00:25:01,690 --> 00:25:04,030


686
00:25:04,030 --> 00:25:07,710


687
00:25:07,710 --> 00:25:10,570


688
00:25:10,570 --> 00:25:13,120


689
00:25:13,120 --> 00:25:14,920


690
00:25:14,920 --> 00:25:17,560


691
00:25:17,560 --> 00:25:19,150


692
00:25:19,150 --> 00:25:22,630


693
00:25:22,630 --> 00:25:25,510


694
00:25:25,510 --> 00:25:27,310


695
00:25:27,310 --> 00:25:28,990


696
00:25:28,990 --> 00:25:32,050


697
00:25:32,050 --> 00:25:34,120


698
00:25:34,120 --> 00:25:36,760


699
00:25:36,760 --> 00:25:38,050


700
00:25:38,050 --> 00:25:40,540


701
00:25:40,540 --> 00:25:42,640


702
00:25:42,640 --> 00:25:43,810


703
00:25:43,810 --> 00:25:48,040


704
00:25:48,040 --> 00:25:53,320


705
00:25:53,320 --> 00:25:57,850


706
00:25:57,850 --> 00:25:59,500


707
00:25:59,500 --> 00:26:02,350


708
00:26:02,350 --> 00:26:03,820


709
00:26:03,820 --> 00:26:06,160


710
00:26:06,160 --> 00:26:08,920


711
00:26:08,920 --> 00:26:12,160


712
00:26:12,160 --> 00:26:13,480


713
00:26:13,480 --> 00:26:14,050


714
00:26:14,050 --> 00:26:18,610


715
00:26:18,610 --> 00:26:19,870


716
00:26:19,870 --> 00:26:21,330


717
00:26:21,330 --> 00:26:23,890


718
00:26:23,890 --> 00:26:25,450


719
00:26:25,450 --> 00:26:25,930


720
00:26:25,930 --> 00:26:27,940


721
00:26:27,940 --> 00:26:29,860


722
00:26:29,860 --> 00:26:31,420


723
00:26:31,420 --> 00:26:32,680


724
00:26:32,680 --> 00:26:35,110


725
00:26:35,110 --> 00:26:36,370


726
00:26:36,370 --> 00:26:37,810


727
00:26:37,810 --> 00:26:41,020


728
00:26:41,020 --> 00:26:44,770


729
00:26:44,770 --> 00:26:47,700


730
00:26:47,700 --> 00:26:50,320


731
00:26:50,320 --> 00:26:52,690


732
00:26:52,690 --> 00:26:55,120


733
00:26:55,120 --> 00:26:57,280


734
00:26:57,280 --> 00:26:58,330


735
00:26:58,330 --> 00:26:59,800


736
00:26:59,800 --> 00:27:02,530


737
00:27:02,530 --> 00:27:03,850


738
00:27:03,850 --> 00:27:05,380


739
00:27:05,380 --> 00:27:08,230


740
00:27:08,230 --> 00:27:10,690


741
00:27:10,690 --> 00:27:12,340


742
00:27:12,340 --> 00:27:14,370


743
00:27:14,370 --> 00:27:17,530


744
00:27:17,530 --> 00:27:19,420


745
00:27:19,420 --> 00:27:22,240


746
00:27:22,240 --> 00:27:23,620


747
00:27:23,620 --> 00:27:25,090


748
00:27:25,090 --> 00:27:26,920


749
00:27:26,920 --> 00:27:28,450


750
00:27:28,450 --> 00:27:30,640


751
00:27:30,640 --> 00:27:32,950


752
00:27:32,950 --> 00:27:35,650


753
00:27:35,650 --> 00:27:37,690


754
00:27:37,690 --> 00:27:39,820


755
00:27:39,820 --> 00:27:42,640


756
00:27:42,640 --> 00:27:45,400


757
00:27:45,400 --> 00:27:47,410


758
00:27:47,410 --> 00:27:50,050


759
00:27:50,050 --> 00:27:52,180


760
00:27:52,180 --> 00:27:53,650


761
00:27:53,650 --> 00:27:57,340


762
00:27:57,340 --> 00:27:58,960


763
00:27:58,960 --> 00:28:00,820


764
00:28:00,820 --> 00:28:02,500


765
00:28:02,500 --> 00:28:04,450


766
00:28:04,450 --> 00:28:06,010


767
00:28:06,010 --> 00:28:07,750


768
00:28:07,750 --> 00:28:10,450


769
00:28:10,450 --> 00:28:12,820


770
00:28:12,820 --> 00:28:14,860


771
00:28:14,860 --> 00:28:17,530


772
00:28:17,530 --> 00:28:19,180


773
00:28:19,180 --> 00:28:20,740


774
00:28:20,740 --> 00:28:24,010


775
00:28:24,010 --> 00:28:28,120


776
00:28:28,120 --> 00:28:29,470


777
00:28:29,470 --> 00:28:33,670


778
00:28:33,670 --> 00:28:35,200


779
00:28:35,200 --> 00:28:37,780


780
00:28:37,780 --> 00:28:39,460


781
00:28:39,460 --> 00:28:41,289


782
00:28:41,289 --> 00:28:43,000


783
00:28:43,000 --> 00:28:44,799


784
00:28:44,799 --> 00:28:47,080


785
00:28:47,080 --> 00:28:49,840


786
00:28:49,840 --> 00:28:51,940


787
00:28:51,940 --> 00:28:54,279


788
00:28:54,279 --> 00:28:55,539


789
00:28:55,539 --> 00:28:57,220


790
00:28:57,220 --> 00:28:59,770


791
00:28:59,770 --> 00:29:01,419


792
00:29:01,419 --> 00:29:02,890


793
00:29:02,890 --> 00:29:04,960


794
00:29:04,960 --> 00:29:08,770


795
00:29:08,770 --> 00:29:10,120


796
00:29:10,120 --> 00:29:12,610


797
00:29:12,610 --> 00:29:15,039


798
00:29:15,039 --> 00:29:18,190


799
00:29:18,190 --> 00:29:19,809


800
00:29:19,809 --> 00:29:22,570


801
00:29:22,570 --> 00:29:23,950


802
00:29:23,950 --> 00:29:26,770


803
00:29:26,770 --> 00:29:28,960


804
00:29:28,960 --> 00:29:30,520


805
00:29:30,520 --> 00:29:34,330


806
00:29:34,330 --> 00:29:35,980


807
00:29:35,980 --> 00:29:37,110


808
00:29:37,110 --> 00:29:39,549


809
00:29:39,549 --> 00:29:41,020


810
00:29:41,020 --> 00:29:43,059


811
00:29:43,059 --> 00:29:45,070


812
00:29:45,070 --> 00:29:47,820


813
00:29:47,820 --> 00:29:50,950


814
00:29:50,950 --> 00:29:52,990


815
00:29:52,990 --> 00:29:56,500


816
00:29:56,500 --> 00:29:58,390


817
00:29:58,390 --> 00:30:00,580


818
00:30:00,580 --> 00:30:03,880


819
00:30:03,880 --> 00:30:05,950


820
00:30:05,950 --> 00:30:07,570


821
00:30:07,570 --> 00:30:10,720


822
00:30:10,720 --> 00:30:12,789


823
00:30:12,789 --> 00:30:14,110


824
00:30:14,110 --> 00:30:16,450


825
00:30:16,450 --> 00:30:18,610


826
00:30:18,610 --> 00:30:19,779


827
00:30:19,779 --> 00:30:21,820


828
00:30:21,820 --> 00:30:23,080


829
00:30:23,080 --> 00:30:24,580


830
00:30:24,580 --> 00:30:26,559


831
00:30:26,559 --> 00:30:27,669


832
00:30:27,669 --> 00:30:29,200


833
00:30:29,200 --> 00:30:32,490


834
00:30:36,900 --> 00:30:39,190


835
00:30:39,190 --> 00:30:44,680


836
00:30:44,680 --> 00:30:46,240


837
00:30:46,240 --> 00:30:49,210


838
00:30:49,210 --> 00:30:50,710


839
00:30:50,710 --> 00:30:51,730


840
00:30:51,730 --> 00:30:53,050


841
00:30:53,050 --> 00:30:54,790


842
00:30:54,790 --> 00:30:56,470


843
00:30:56,470 --> 00:30:58,930


844
00:30:58,930 --> 00:31:02,320


845
00:31:02,320 --> 00:31:03,700


846
00:31:03,700 --> 00:31:05,470


847
00:31:05,470 --> 00:31:07,240


848
00:31:07,240 --> 00:31:10,720


849
00:31:10,720 --> 00:31:11,980


850
00:31:11,980 --> 00:31:13,240


851
00:31:13,240 --> 00:31:16,810


852
00:31:16,810 --> 00:31:19,510


853
00:31:19,510 --> 00:31:20,740


854
00:31:20,740 --> 00:31:23,860


855
00:31:23,860 --> 00:31:24,940


856
00:31:24,940 --> 00:31:27,190


857
00:31:27,190 --> 00:31:29,050


858
00:31:29,050 --> 00:31:32,200


859
00:31:32,200 --> 00:31:33,460


860
00:31:33,460 --> 00:31:35,620


861
00:31:35,620 --> 00:31:37,420


862
00:31:37,420 --> 00:31:40,030


863
00:31:40,030 --> 00:31:42,820


864
00:31:42,820 --> 00:31:46,150


865
00:31:46,150 --> 00:31:47,050


866
00:31:47,050 --> 00:31:49,240


867
00:31:49,240 --> 00:31:50,140


868
00:31:50,140 --> 00:31:51,430


869
00:31:51,430 --> 00:31:53,140


870
00:31:53,140 --> 00:31:55,570


871
00:31:55,570 --> 00:31:57,970


872
00:31:57,970 --> 00:31:59,140


873
00:31:59,140 --> 00:32:00,460


874
00:32:00,460 --> 00:32:01,360


875
00:32:01,360 --> 00:32:03,700


876
00:32:03,700 --> 00:32:05,770


877
00:32:05,770 --> 00:32:07,210


878
00:32:07,210 --> 00:32:10,180


879
00:32:10,180 --> 00:32:12,250


880
00:32:12,250 --> 00:32:13,540


881
00:32:13,540 --> 00:32:15,730


882
00:32:15,730 --> 00:32:17,590


883
00:32:17,590 --> 00:32:19,090


884
00:32:19,090 --> 00:32:21,190


885
00:32:21,190 --> 00:32:22,840


886
00:32:22,840 --> 00:32:27,850


887
00:32:27,850 --> 00:32:29,770


888
00:32:29,770 --> 00:32:32,260


889
00:32:32,260 --> 00:32:34,270


890
00:32:34,270 --> 00:32:36,790


891
00:32:36,790 --> 00:32:38,260


892
00:32:38,260 --> 00:32:39,730


893
00:32:39,730 --> 00:32:41,860


894
00:32:41,860 --> 00:32:44,230


895
00:32:44,230 --> 00:32:46,600


896
00:32:46,600 --> 00:32:50,230


897
00:32:50,230 --> 00:32:52,059


898
00:32:52,059 --> 00:32:53,350


899
00:32:53,350 --> 00:32:55,150


900
00:32:55,150 --> 00:32:57,340


901
00:32:57,340 --> 00:33:00,429


902
00:33:00,429 --> 00:33:02,289


903
00:33:02,289 --> 00:33:04,210


904
00:33:04,210 --> 00:33:05,950


905
00:33:05,950 --> 00:33:08,070


906
00:33:08,070 --> 00:33:11,110


907
00:33:11,110 --> 00:33:12,220


908
00:33:12,220 --> 00:33:14,799


909
00:33:14,799 --> 00:33:16,570


910
00:33:16,570 --> 00:33:18,039


911
00:33:18,039 --> 00:33:20,289


912
00:33:20,289 --> 00:33:21,789


913
00:33:21,789 --> 00:33:24,159


914
00:33:24,159 --> 00:33:26,559


915
00:33:26,559 --> 00:33:27,880


916
00:33:27,880 --> 00:33:30,280


917
00:33:30,280 --> 00:33:32,169


918
00:33:32,169 --> 00:33:34,240


919
00:33:34,240 --> 00:33:35,740


920
00:33:35,740 --> 00:33:37,559


921
00:33:37,559 --> 00:33:39,640


922
00:33:39,640 --> 00:33:41,890


923
00:33:41,890 --> 00:33:45,130


924
00:33:45,130 --> 00:33:48,179


925
00:33:48,179 --> 00:33:50,650


926
00:33:50,650 --> 00:33:53,260


927
00:33:53,260 --> 00:33:55,630


928
00:33:55,630 --> 00:33:57,309


929
00:33:57,309 --> 00:33:59,049


930
00:33:59,049 --> 00:34:03,250


931
00:34:03,250 --> 00:34:05,020


932
00:34:05,020 --> 00:34:07,090


933
00:34:07,090 --> 00:34:08,739


934
00:34:08,739 --> 00:34:10,179


935
00:34:10,179 --> 00:34:13,350


936
00:34:13,350 --> 00:34:15,790


937
00:34:15,790 --> 00:34:18,070


938
00:34:18,070 --> 00:34:19,929


939
00:34:19,929 --> 00:34:21,989


940
00:34:21,989 --> 00:34:25,000


941
00:34:25,000 --> 00:34:27,280


942
00:34:27,280 --> 00:34:28,600


943
00:34:28,600 --> 00:34:29,918


944
00:34:29,918 --> 00:34:31,179


945
00:34:31,179 --> 00:34:33,399


946
00:34:33,399 --> 00:34:35,139


947
00:34:35,139 --> 00:34:37,270


948
00:34:37,270 --> 00:34:38,800


949
00:34:38,800 --> 00:34:40,690


950
00:34:40,690 --> 00:34:42,668


951
00:34:42,668 --> 00:34:45,369


952
00:34:45,369 --> 00:34:48,668


953
00:34:48,668 --> 00:34:50,800


954
00:34:50,800 --> 00:34:52,540


955
00:34:52,540 --> 00:34:54,668


956
00:34:54,668 --> 00:34:57,190


957
00:34:57,190 --> 00:34:59,390


958
00:34:59,390 --> 00:35:01,370


959
00:35:01,370 --> 00:35:03,320


960
00:35:03,320 --> 00:35:04,700


961
00:35:04,700 --> 00:35:06,170


962
00:35:06,170 --> 00:35:07,460


963
00:35:07,460 --> 00:35:09,050


964
00:35:09,050 --> 00:35:12,140


965
00:35:12,140 --> 00:35:14,450


966
00:35:14,450 --> 00:35:16,490


967
00:35:16,490 --> 00:35:19,580


968
00:35:19,580 --> 00:35:22,160


969
00:35:22,160 --> 00:35:24,200


970
00:35:24,200 --> 00:35:26,840


971
00:35:26,840 --> 00:35:30,110


972
00:35:30,110 --> 00:35:31,370


973
00:35:31,370 --> 00:35:33,080


974
00:35:33,080 --> 00:35:35,810


975
00:35:35,810 --> 00:35:37,370


976
00:35:37,370 --> 00:35:38,990


977
00:35:38,990 --> 00:35:41,030


978
00:35:41,030 --> 00:35:44,720


979
00:35:44,720 --> 00:35:45,710


980
00:35:45,710 --> 00:35:47,030


981
00:35:47,030 --> 00:35:51,920


982
00:35:51,920 --> 00:35:54,320


983
00:35:54,320 --> 00:35:55,430


984
00:35:55,430 --> 00:35:56,600


985
00:35:56,600 --> 00:36:00,670


986
00:36:00,670 --> 00:36:02,750


987
00:36:02,750 --> 00:36:15,200


988
00:36:15,200 --> 00:36:16,190


989
00:36:16,190 --> 00:36:20,900


990
00:36:20,900 --> 00:36:23,210


991
00:36:23,210 --> 00:36:24,340


992
00:36:24,340 --> 00:36:26,960


993
00:36:26,960 --> 00:36:29,270


994
00:36:29,270 --> 00:36:31,910


995
00:36:31,910 --> 00:36:33,650


996
00:36:33,650 --> 00:36:35,930


997
00:36:35,930 --> 00:36:38,120


998
00:36:38,120 --> 00:36:41,120


999
00:36:41,120 --> 00:36:42,890


1000
00:36:42,890 --> 00:36:45,110


1001
00:36:45,110 --> 00:36:46,640


1002
00:36:46,640 --> 00:36:47,690


1003
00:36:47,690 --> 00:36:50,510


1004
00:36:50,510 --> 00:36:52,130


1005
00:36:52,130 --> 00:36:54,560


1006
00:36:54,560 --> 00:36:55,940


1007
00:36:55,940 --> 00:36:57,290


1008
00:36:57,290 --> 00:36:59,390


1009
00:36:59,390 --> 00:37:00,320


1010
00:37:00,320 --> 00:37:02,180


1011
00:37:02,180 --> 00:37:03,230


1012
00:37:03,230 --> 00:37:06,740


1013
00:37:06,740 --> 00:37:09,640


1014
00:37:09,990 --> 00:37:12,180


1015
00:37:12,180 --> 00:37:14,940


1016
00:37:14,940 --> 00:37:17,190


1017
00:37:17,190 --> 00:37:19,770


1018
00:37:19,770 --> 00:37:21,660


1019
00:37:21,660 --> 00:37:24,630


1020
00:37:24,630 --> 00:37:27,630


1021
00:37:27,630 --> 00:37:30,300


1022
00:37:30,300 --> 00:37:31,440


1023
00:37:31,440 --> 00:37:34,530


1024
00:37:34,530 --> 00:37:36,810


1025
00:37:36,810 --> 00:37:38,849


1026
00:37:38,849 --> 00:37:40,530


1027
00:37:40,530 --> 00:37:42,060


1028
00:37:42,060 --> 00:37:43,200


1029
00:37:43,200 --> 00:37:44,730


1030
00:37:44,730 --> 00:37:47,190


1031
00:37:47,190 --> 00:37:48,690


1032
00:37:48,690 --> 00:37:50,040


1033
00:37:50,040 --> 00:37:52,160


1034
00:37:52,160 --> 00:37:54,510


1035
00:37:54,510 --> 00:37:56,700


1036
00:37:56,700 --> 00:37:58,800


1037
00:37:58,800 --> 00:38:00,660


1038
00:38:00,660 --> 00:38:03,390


1039
00:38:03,390 --> 00:38:05,790


1040
00:38:05,790 --> 00:38:08,190


1041
00:38:08,190 --> 00:38:11,099


1042
00:38:11,099 --> 00:38:12,839


1043
00:38:12,839 --> 00:38:14,849


1044
00:38:14,849 --> 00:38:16,290


1045
00:38:16,290 --> 00:38:17,730


1046
00:38:17,730 --> 00:38:21,420


1047
00:38:21,420 --> 00:38:23,190


1048
00:38:23,190 --> 00:38:25,849


1049
00:38:25,849 --> 00:38:27,900


1050
00:38:27,900 --> 00:38:30,300


1051
00:38:30,300 --> 00:38:33,240


1052
00:38:33,240 --> 00:38:34,650


1053
00:38:34,650 --> 00:38:36,660


1054
00:38:36,660 --> 00:38:38,910


1055
00:38:38,910 --> 00:38:44,430


1056
00:38:44,430 --> 00:38:46,109


1057
00:38:46,109 --> 00:38:48,270


1058
00:38:48,270 --> 00:38:50,099


1059
00:38:50,099 --> 00:38:51,960


1060
00:38:51,960 --> 00:38:53,490


1061
00:38:53,490 --> 00:38:56,280


1062
00:38:56,280 --> 00:38:58,580


1063
00:38:58,580 --> 00:39:01,080


1064
00:39:01,080 --> 00:39:02,250


1065
00:39:02,250 --> 00:39:04,440


1066
00:39:04,440 --> 00:39:06,570


1067
00:39:06,570 --> 00:39:09,030


1068
00:39:09,030 --> 00:39:12,089


1069
00:39:12,089 --> 00:39:14,700


1070
00:39:14,700 --> 00:39:15,900


1071
00:39:15,900 --> 00:39:17,790


1072
00:39:17,790 --> 00:39:19,170


1073
00:39:19,170 --> 00:39:22,230


1074
00:39:22,230 --> 00:39:23,770


1075
00:39:23,770 --> 00:39:27,130


1076
00:39:27,130 --> 00:39:29,380


1077
00:39:29,380 --> 00:39:32,710


1078
00:39:32,710 --> 00:39:34,990


1079
00:39:34,990 --> 00:39:37,870


1080
00:39:37,870 --> 00:39:39,400


1081
00:39:39,400 --> 00:39:43,510


1082
00:39:43,510 --> 00:39:48,010


1083
00:39:48,010 --> 00:39:51,940


1084
00:39:51,940 --> 00:39:55,330


1085
00:39:55,330 --> 00:39:59,400


1086
00:39:59,790 --> 00:40:05,710


1087
00:40:05,710 --> 00:40:07,900


1088
00:40:07,900 --> 00:40:10,240


1089
00:40:10,240 --> 00:40:11,770


1090
00:40:11,770 --> 00:40:14,620


1091
00:40:14,620 --> 00:40:16,090


1092
00:40:16,090 --> 00:40:18,400


1093
00:40:18,400 --> 00:40:20,020


1094
00:40:20,020 --> 00:40:22,180


1095
00:40:22,180 --> 00:40:23,800


1096
00:40:23,800 --> 00:40:25,150


1097
00:40:25,150 --> 00:40:27,400


1098
00:40:27,400 --> 00:40:28,510


1099
00:40:28,510 --> 00:40:34,120


1100
00:40:34,120 --> 00:40:36,820


1101
00:40:36,820 --> 00:40:38,950


1102
00:40:38,950 --> 00:40:42,010


1103
00:40:42,010 --> 00:40:43,660


1104
00:40:43,660 --> 00:40:46,900


1105
00:40:46,900 --> 00:40:50,350


1106
00:40:50,350 --> 00:40:51,670


1107
00:40:51,670 --> 00:40:53,710


1108
00:40:53,710 --> 00:40:56,170


1109
00:40:56,170 --> 00:40:58,090


1110
00:40:58,090 --> 00:41:00,460


1111
00:41:00,460 --> 00:41:01,480


1112
00:41:01,480 --> 00:41:03,850


1113
00:41:03,850 --> 00:41:04,930


1114
00:41:04,930 --> 00:41:07,060


1115
00:41:07,060 --> 00:41:13,030


1116
00:41:13,030 --> 00:41:13,900


1117
00:41:13,900 --> 00:41:16,900


1118
00:41:16,900 --> 00:41:18,580


1119
00:41:18,580 --> 00:41:20,530


1120
00:41:20,530 --> 00:41:22,480


1121
00:41:22,480 --> 00:41:25,210


1122
00:41:25,210 --> 00:41:27,190


1123
00:41:27,190 --> 00:41:29,110


1124
00:41:29,110 --> 00:41:31,600


1125
00:41:31,600 --> 00:41:32,950


1126
00:41:32,950 --> 00:41:35,920


1127
00:41:35,920 --> 00:41:37,359


1128
00:41:37,359 --> 00:41:39,489


1129
00:41:39,489 --> 00:41:41,140


1130
00:41:41,140 --> 00:41:42,579


1131
00:41:42,579 --> 00:41:49,180


1132
00:41:49,180 --> 00:41:50,859


1133
00:41:50,859 --> 00:41:53,619


1134
00:41:53,619 --> 00:41:55,720


1135
00:41:55,720 --> 00:41:57,400


1136
00:41:57,400 --> 00:42:00,190


1137
00:42:00,190 --> 00:42:02,410


1138
00:42:02,410 --> 00:42:03,579


1139
00:42:03,579 --> 00:42:05,200


1140
00:42:05,200 --> 00:42:08,529


1141
00:42:08,529 --> 00:42:11,319


1142
00:42:11,319 --> 00:42:12,730


1143
00:42:12,730 --> 00:42:14,529


1144
00:42:14,529 --> 00:42:16,779


1145
00:42:16,779 --> 00:42:19,559


1146
00:42:19,559 --> 00:42:21,730


1147
00:42:21,730 --> 00:42:24,489


1148
00:42:24,489 --> 00:42:25,779


1149
00:42:25,779 --> 00:42:27,519


1150
00:42:27,519 --> 00:42:29,410


1151
00:42:29,410 --> 00:42:31,960


1152
00:42:31,960 --> 00:42:33,579


1153
00:42:33,579 --> 00:42:34,960


1154
00:42:34,960 --> 00:42:37,150


1155
00:42:37,150 --> 00:42:38,739


1156
00:42:38,739 --> 00:42:41,019


1157
00:42:41,019 --> 00:42:43,119


1158
00:42:43,119 --> 00:42:48,099


1159
00:42:48,099 --> 00:42:49,690


1160
00:42:49,690 --> 00:42:52,720


1161
00:42:52,720 --> 00:42:54,160


1162
00:42:54,160 --> 00:42:56,259


1163
00:42:56,259 --> 00:42:57,849


1164
00:42:57,849 --> 00:42:59,589


1165
00:42:59,589 --> 00:43:00,849


1166
00:43:00,849 --> 00:43:02,859


1167
00:43:02,859 --> 00:43:04,299


1168
00:43:04,299 --> 00:43:06,249


1169
00:43:06,249 --> 00:43:07,660


1170
00:43:07,660 --> 00:43:09,400


1171
00:43:09,400 --> 00:43:12,099


1172
00:43:12,099 --> 00:43:13,539


1173
00:43:13,539 --> 00:43:15,759


1174
00:43:15,759 --> 00:43:16,960


1175
00:43:16,960 --> 00:43:19,359


1176
00:43:19,359 --> 00:43:20,799


1177
00:43:20,799 --> 00:43:23,319


1178
00:43:23,319 --> 00:43:27,369


1179
00:43:27,369 --> 00:43:29,380


1180
00:43:29,380 --> 00:43:31,809


1181
00:43:31,809 --> 00:43:33,670


1182
00:43:33,670 --> 00:43:35,410


1183
00:43:35,410 --> 00:43:36,940


1184
00:43:36,940 --> 00:43:38,440


1185
00:43:38,440 --> 00:43:39,819


1186
00:43:39,819 --> 00:43:41,140


1187
00:43:41,140 --> 00:43:42,549


1188
00:43:42,549 --> 00:43:44,559


1189
00:43:44,559 --> 00:43:45,849


1190
00:43:45,849 --> 00:43:48,759


1191
00:43:48,759 --> 00:43:50,500


1192
00:43:50,500 --> 00:43:53,050


1193
00:43:53,050 --> 00:43:55,000


1194
00:43:55,000 --> 00:43:57,730


1195
00:43:57,730 --> 00:44:00,250


1196
00:44:00,250 --> 00:44:03,460


1197
00:44:03,460 --> 00:44:06,880


1198
00:44:06,880 --> 00:44:07,780


1199
00:44:07,780 --> 00:44:09,220


1200
00:44:09,220 --> 00:44:12,340


1201
00:44:12,340 --> 00:44:14,110


1202
00:44:14,110 --> 00:44:15,550


1203
00:44:15,550 --> 00:44:17,800


1204
00:44:17,800 --> 00:44:19,480


1205
00:44:19,480 --> 00:44:21,790


1206
00:44:21,790 --> 00:44:24,400


1207
00:44:24,400 --> 00:44:27,400


1208
00:44:27,400 --> 00:44:29,890


1209
00:44:29,890 --> 00:44:31,330


1210
00:44:31,330 --> 00:44:33,940


1211
00:44:33,940 --> 00:44:36,160


1212
00:44:36,160 --> 00:44:37,360


1213
00:44:37,360 --> 00:44:39,340


1214
00:44:39,340 --> 00:44:41,080


1215
00:44:41,080 --> 00:44:42,790


1216
00:44:42,790 --> 00:44:45,190


1217
00:44:45,190 --> 00:44:46,990


1218
00:44:46,990 --> 00:44:48,160


1219
00:44:48,160 --> 00:44:50,380


1220
00:44:50,380 --> 00:44:52,690


1221
00:44:52,690 --> 00:44:54,390


1222
00:44:54,390 --> 00:44:56,320


1223
00:44:56,320 --> 00:44:57,880


1224
00:44:57,880 --> 00:45:00,160


1225
00:45:00,160 --> 00:45:02,470


1226
00:45:02,470 --> 00:45:05,260


1227
00:45:05,260 --> 00:45:08,680


1228
00:45:08,680 --> 00:45:11,680


1229
00:45:11,680 --> 00:45:15,190


1230
00:45:15,190 --> 00:45:16,900


1231
00:45:16,900 --> 00:45:18,400


1232
00:45:18,400 --> 00:45:19,510


1233
00:45:19,510 --> 00:45:21,430


1234
00:45:21,430 --> 00:45:22,660


1235
00:45:22,660 --> 00:45:24,010


1236
00:45:24,010 --> 00:45:26,440


1237
00:45:26,440 --> 00:45:28,270


1238
00:45:28,270 --> 00:45:29,710


1239
00:45:29,710 --> 00:45:31,450


1240
00:45:31,450 --> 00:45:34,080


1241
00:45:34,080 --> 00:45:39,160


1242
00:45:39,160 --> 00:45:42,070


1243
00:45:42,070 --> 00:45:45,010


1244
00:45:45,010 --> 00:45:45,820


1245
00:45:45,820 --> 00:45:50,050


1246
00:45:50,050 --> 00:45:54,070


1247
00:45:54,070 --> 00:45:56,500


1248
00:45:56,500 --> 00:46:00,490


1249
00:46:00,490 --> 00:46:03,400


1250
00:46:03,400 --> 00:46:04,450


1251
00:46:04,450 --> 00:46:06,160


1252
00:46:06,160 --> 00:46:07,780


1253
00:46:07,780 --> 00:46:10,120


1254
00:46:10,120 --> 00:46:11,500


1255
00:46:11,500 --> 00:46:14,890


1256
00:46:14,890 --> 00:46:19,330


1257
00:46:19,330 --> 00:46:20,740


1258
00:46:20,740 --> 00:46:22,750


1259
00:46:22,750 --> 00:46:25,840


1260
00:46:25,840 --> 00:46:27,940


1261
00:46:27,940 --> 00:46:31,450


1262
00:46:31,450 --> 00:46:33,640


1263
00:46:33,640 --> 00:46:40,660


1264
00:46:40,660 --> 00:46:43,090


1265
00:46:43,090 --> 00:46:45,700


1266
00:46:45,700 --> 00:46:47,710


1267
00:46:47,710 --> 00:46:49,720


1268
00:46:49,720 --> 00:46:51,490


1269
00:46:51,490 --> 00:46:53,650


1270
00:46:53,650 --> 00:46:55,810


1271
00:46:55,810 --> 00:46:59,110


1272
00:46:59,110 --> 00:47:01,630


1273
00:47:01,630 --> 00:47:03,970


1274
00:47:03,970 --> 00:47:05,770


1275
00:47:05,770 --> 00:47:09,790


1276
00:47:09,790 --> 00:47:11,020


1277
00:47:11,020 --> 00:47:13,300


1278
00:47:13,300 --> 00:47:15,010


1279
00:47:15,010 --> 00:47:17,260


1280
00:47:17,260 --> 00:47:18,820


1281
00:47:18,820 --> 00:47:21,700


1282
00:47:21,700 --> 00:47:23,320


1283
00:47:23,320 --> 00:47:25,000


1284
00:47:25,000 --> 00:47:29,500


1285
00:47:29,500 --> 00:47:30,850


1286
00:47:30,850 --> 00:47:33,400


1287
00:47:33,400 --> 00:47:35,590


1288
00:47:35,590 --> 00:47:37,930


1289
00:47:37,930 --> 00:47:40,210


1290
00:47:40,210 --> 00:47:41,320


1291
00:47:41,320 --> 00:47:44,170


1292
00:47:44,170 --> 00:47:46,060


1293
00:47:46,060 --> 00:47:47,590


1294
00:47:47,590 --> 00:47:49,630


1295
00:47:49,630 --> 00:47:51,040


1296
00:47:51,040 --> 00:47:52,900


1297
00:47:52,900 --> 00:47:54,790


1298
00:47:54,790 --> 00:47:57,040


1299
00:47:57,040 --> 00:47:59,170


1300
00:47:59,170 --> 00:48:01,720


1301
00:48:01,720 --> 00:48:03,250


1302
00:48:03,250 --> 00:48:05,140


1303
00:48:05,140 --> 00:48:08,590


1304
00:48:08,590 --> 00:48:10,570


1305
00:48:10,570 --> 00:48:12,100


1306
00:48:12,100 --> 00:48:13,360


1307
00:48:13,360 --> 00:48:16,410


1308
00:48:16,410 --> 00:48:18,540


1309
00:48:18,540 --> 00:48:20,880


1310
00:48:20,880 --> 00:48:23,310


1311
00:48:23,310 --> 00:48:24,600


1312
00:48:24,600 --> 00:48:27,270


1313
00:48:27,270 --> 00:48:28,890


1314
00:48:28,890 --> 00:48:30,240


1315
00:48:30,240 --> 00:48:32,250


1316
00:48:32,250 --> 00:48:33,960


1317
00:48:33,960 --> 00:48:35,130


1318
00:48:35,130 --> 00:48:37,830


1319
00:48:37,830 --> 00:48:38,850


1320
00:48:38,850 --> 00:48:41,100


1321
00:48:41,100 --> 00:48:42,420


1322
00:48:42,420 --> 00:48:44,070


1323
00:48:44,070 --> 00:48:45,630


1324
00:48:45,630 --> 00:48:47,990


1325
00:48:47,990 --> 00:48:50,820


1326
00:48:50,820 --> 00:48:52,200


1327
00:48:52,200 --> 00:48:54,480


1328
00:48:54,480 --> 00:48:56,400


1329
00:48:56,400 --> 00:48:58,590


1330
00:48:58,590 --> 00:49:00,030


1331
00:49:00,030 --> 00:49:02,280


1332
00:49:02,280 --> 00:49:04,770


1333
00:49:04,770 --> 00:49:07,620


1334
00:49:07,620 --> 00:49:08,820


1335
00:49:08,820 --> 00:49:09,900


1336
00:49:09,900 --> 00:49:10,740


1337
00:49:10,740 --> 00:49:12,630


1338
00:49:12,630 --> 00:49:13,740


1339
00:49:13,740 --> 00:49:17,300


1340
00:49:17,300 --> 00:49:20,400


1341
00:49:20,400 --> 00:49:21,450


1342
00:49:21,450 --> 00:49:23,370


1343
00:49:23,370 --> 00:49:24,540


1344
00:49:24,540 --> 00:49:26,040


1345
00:49:26,040 --> 00:49:27,780


1346
00:49:27,780 --> 00:49:29,520


1347
00:49:29,520 --> 00:49:30,750


1348
00:49:30,750 --> 00:49:33,390


1349
00:49:33,390 --> 00:49:35,190


1350
00:49:35,190 --> 00:49:36,510


1351
00:49:36,510 --> 00:49:39,090


1352
00:49:39,090 --> 00:49:41,360


1353
00:49:41,360 --> 00:49:45,300


1354
00:49:45,300 --> 00:49:46,260


1355
00:49:46,260 --> 00:49:48,570


1356
00:49:48,570 --> 00:49:50,220


1357
00:49:50,220 --> 00:49:52,830


1358
00:49:52,830 --> 00:49:54,330


1359
00:49:54,330 --> 00:49:57,060


1360
00:49:57,060 --> 00:49:59,070


1361
00:49:59,070 --> 00:50:00,480


1362
00:50:00,480 --> 00:50:03,240


1363
00:50:03,240 --> 00:50:06,330


1364
00:50:06,330 --> 00:50:08,220


1365
00:50:08,220 --> 00:50:10,140


1366
00:50:10,140 --> 00:50:11,730


1367
00:50:11,730 --> 00:50:13,050


1368
00:50:13,050 --> 00:50:14,220


1369
00:50:14,220 --> 00:50:16,380


1370
00:50:16,380 --> 00:50:17,880


1371
00:50:17,880 --> 00:50:19,260


1372
00:50:19,260 --> 00:50:20,550


1373
00:50:20,550 --> 00:50:23,580


1374
00:50:23,580 --> 00:50:26,010


1375
00:50:26,010 --> 00:50:27,540


1376
00:50:27,540 --> 00:50:28,570


1377
00:50:28,570 --> 00:50:31,030


1378
00:50:31,030 --> 00:50:34,240


1379
00:50:34,240 --> 00:50:35,590


1380
00:50:35,590 --> 00:50:37,810


1381
00:50:37,810 --> 00:50:39,400


1382
00:50:39,400 --> 00:50:41,200


1383
00:50:41,200 --> 00:50:43,360


1384
00:50:43,360 --> 00:50:45,640


1385
00:50:45,640 --> 00:50:47,170


1386
00:50:47,170 --> 00:50:49,180


1387
00:50:49,180 --> 00:50:50,950


1388
00:50:50,950 --> 00:50:53,380


1389
00:50:53,380 --> 00:50:55,660


1390
00:50:55,660 --> 00:50:56,890


1391
00:50:56,890 --> 00:50:58,750


1392
00:50:58,750 --> 00:51:00,730


1393
00:51:00,730 --> 00:51:03,640


1394
00:51:03,640 --> 00:51:05,410


1395
00:51:05,410 --> 00:51:09,760


1396
00:51:09,760 --> 00:51:11,050


1397
00:51:11,050 --> 00:51:13,030


1398
00:51:13,030 --> 00:51:14,410


1399
00:51:14,410 --> 00:51:15,490


1400
00:51:15,490 --> 00:51:18,160


1401
00:51:18,160 --> 00:51:19,690


1402
00:51:19,690 --> 00:51:21,400


1403
00:51:21,400 --> 00:51:23,650


1404
00:51:23,650 --> 00:51:25,750


1405
00:51:25,750 --> 00:51:27,070


1406
00:51:27,070 --> 00:51:29,410


1407
00:51:29,410 --> 00:51:31,360


1408
00:51:31,360 --> 00:51:32,290


1409
00:51:32,290 --> 00:51:34,630


1410
00:51:34,630 --> 00:51:36,580


1411
00:51:36,580 --> 00:51:38,470


1412
00:51:38,470 --> 00:51:40,600


1413
00:51:40,600 --> 00:51:42,130


1414
00:51:42,130 --> 00:51:43,570


1415
00:51:43,570 --> 00:51:45,790


1416
00:51:45,790 --> 00:51:47,740


1417
00:51:47,740 --> 00:51:49,180


1418
00:51:49,180 --> 00:51:52,330


1419
00:51:52,330 --> 00:51:54,670


1420
00:51:54,670 --> 00:51:58,060


1421
00:51:58,060 --> 00:51:59,590


1422
00:51:59,590 --> 00:52:00,760


1423
00:52:00,760 --> 00:52:03,600


1424
00:52:03,600 --> 00:52:06,010


1425
00:52:06,010 --> 00:52:08,050


1426
00:52:08,050 --> 00:52:10,000


1427
00:52:10,000 --> 00:52:11,680


1428
00:52:11,680 --> 00:52:13,270


1429
00:52:13,270 --> 00:52:15,700


1430
00:52:15,700 --> 00:52:17,500


1431
00:52:17,500 --> 00:52:20,260


1432
00:52:20,260 --> 00:52:21,730


1433
00:52:21,730 --> 00:52:23,620


1434
00:52:23,620 --> 00:52:24,880


1435
00:52:24,880 --> 00:52:28,720


1436
00:52:28,720 --> 00:52:30,670


1437
00:52:30,670 --> 00:52:33,790


1438
00:52:33,790 --> 00:52:35,020


1439
00:52:35,020 --> 00:52:36,910


1440
00:52:36,910 --> 00:52:38,470


1441
00:52:38,470 --> 00:52:40,150


1442
00:52:40,150 --> 00:52:41,680


1443
00:52:41,680 --> 00:52:42,250


1444
00:52:42,250 --> 00:52:43,930


1445
00:52:43,930 --> 00:52:45,610


1446
00:52:45,610 --> 00:52:47,860


1447
00:52:47,860 --> 00:52:49,060


1448
00:52:49,060 --> 00:52:50,620


1449
00:52:50,620 --> 00:52:53,800


1450
00:52:53,800 --> 00:52:54,700


1451
00:52:54,700 --> 00:52:55,750


1452
00:52:55,750 --> 00:52:58,000


1453
00:52:58,000 --> 00:52:59,170


1454
00:52:59,170 --> 00:53:00,700


1455
00:53:00,700 --> 00:53:05,710


1456
00:53:05,710 --> 00:53:07,720


1457
00:53:07,720 --> 00:53:10,330


1458
00:53:10,330 --> 00:53:12,010


1459
00:53:12,010 --> 00:53:13,480


1460
00:53:13,480 --> 00:53:16,060


1461
00:53:16,060 --> 00:53:19,290


1462
00:53:19,290 --> 00:53:22,150


1463
00:53:22,150 --> 00:53:24,070


1464
00:53:24,070 --> 00:53:28,150


1465
00:53:28,150 --> 00:53:30,970


1466
00:53:30,970 --> 00:53:32,650


1467
00:53:32,650 --> 00:53:35,230


1468
00:53:35,230 --> 00:53:38,560


1469
00:53:38,560 --> 00:53:39,970


1470
00:53:39,970 --> 00:53:41,380


1471
00:53:41,380 --> 00:53:43,000


1472
00:53:43,000 --> 00:53:44,950


1473
00:53:44,950 --> 00:53:48,370


1474
00:53:48,370 --> 00:53:50,020


1475
00:53:50,020 --> 00:53:51,490


1476
00:53:51,490 --> 00:53:53,200


1477
00:53:53,200 --> 00:53:54,850


1478
00:53:54,850 --> 00:53:56,050


1479
00:53:56,050 --> 00:53:57,850


1480
00:53:57,850 --> 00:53:59,140


1481
00:53:59,140 --> 00:54:01,680


1482
00:54:01,680 --> 00:54:05,140


1483
00:54:05,140 --> 00:54:07,450


1484
00:54:07,450 --> 00:54:09,160


1485
00:54:09,160 --> 00:54:10,750


1486
00:54:10,750 --> 00:54:12,460


1487
00:54:12,460 --> 00:54:15,060


1488
00:54:15,060 --> 00:54:17,290


1489
00:54:17,290 --> 00:54:18,340


1490
00:54:18,340 --> 00:54:21,130


1491
00:54:21,130 --> 00:54:24,250


1492
00:54:24,250 --> 00:54:25,780


1493
00:54:25,780 --> 00:54:28,450


1494
00:54:28,450 --> 00:54:29,950


1495
00:54:29,950 --> 00:54:31,510


1496
00:54:31,510 --> 00:54:33,940


1497
00:54:33,940 --> 00:54:38,260


1498
00:54:38,260 --> 00:54:40,840


1499
00:54:40,840 --> 00:54:43,150


1500
00:54:43,150 --> 00:54:45,280


1501
00:54:45,280 --> 00:54:47,530


1502
00:54:47,530 --> 00:54:49,900


1503
00:54:49,900 --> 00:54:53,740


1504
00:54:53,740 --> 00:54:55,930


1505
00:54:55,930 --> 00:55:01,120


1506
00:55:01,120 --> 00:55:02,560


1507
00:55:02,560 --> 00:55:04,270


1508
00:55:04,270 --> 00:55:09,070


1509
00:55:09,070 --> 00:55:11,200


1510
00:55:11,200 --> 00:55:15,220


1511
00:55:15,220 --> 00:55:17,080


1512
00:55:17,080 --> 00:55:19,450


1513
00:55:19,450 --> 00:55:20,710


1514
00:55:20,710 --> 00:55:23,740


1515
00:55:23,740 --> 00:55:25,510


1516
00:55:25,510 --> 00:55:30,190


1517
00:55:30,190 --> 00:55:33,880


1518
00:55:33,880 --> 00:55:38,650


1519
00:55:38,650 --> 00:55:40,540


1520
00:55:40,540 --> 00:55:43,570


1521
00:55:43,570 --> 00:55:45,730


1522
00:55:45,730 --> 00:55:47,980


1523
00:55:47,980 --> 00:55:49,300


1524
00:55:49,300 --> 00:55:50,380


1525
00:55:50,380 --> 00:55:52,210


1526
00:55:52,210 --> 00:55:54,460


1527
00:55:54,460 --> 00:55:57,370


1528
00:55:57,370 --> 00:55:58,660


1529
00:55:58,660 --> 00:56:00,730


1530
00:56:00,730 --> 00:56:04,090


1531
00:56:04,090 --> 00:56:06,520


1532
00:56:06,520 --> 00:56:08,260


1533
00:56:08,260 --> 00:56:09,580


1534
00:56:09,580 --> 00:56:11,350


1535
00:56:11,350 --> 00:56:12,700


1536
00:56:12,700 --> 00:56:14,580


1537
00:56:14,580 --> 00:56:16,180


1538
00:56:16,180 --> 00:56:19,300


1539
00:56:19,300 --> 00:56:20,920


1540
00:56:20,920 --> 00:56:22,480


1541
00:56:22,480 --> 00:56:24,930


1542
00:56:24,930 --> 00:56:27,160


1543
00:56:27,160 --> 00:56:29,350


1544
00:56:29,350 --> 00:56:30,400


1545
00:56:30,400 --> 00:56:32,410


1546
00:56:32,410 --> 00:56:33,670


1547
00:56:33,670 --> 00:56:36,550


1548
00:56:36,550 --> 00:56:40,060


1549
00:56:40,060 --> 00:56:41,830


1550
00:56:41,830 --> 00:56:43,780


1551
00:56:43,780 --> 00:56:44,830


1552
00:56:44,830 --> 00:56:47,620


1553
00:56:47,620 --> 00:56:49,810


1554
00:56:49,810 --> 00:56:50,890


1555
00:56:50,890 --> 00:56:53,230


1556
00:56:53,230 --> 00:56:55,030


1557
00:56:55,030 --> 00:56:57,640


1558
00:56:57,640 --> 00:56:59,050


1559
00:56:59,050 --> 00:57:01,120


1560
00:57:01,120 --> 00:57:04,480


1561
00:57:04,480 --> 00:57:07,240


1562
00:57:07,240 --> 00:57:08,860


1563
00:57:08,860 --> 00:57:09,550


1564
00:57:09,550 --> 00:57:11,470


1565
00:57:11,470 --> 00:57:12,760


1566
00:57:12,760 --> 00:57:13,720


1567
00:57:13,720 --> 00:57:14,920


1568
00:57:14,920 --> 00:57:21,400


1569
00:57:21,400 --> 00:57:24,070


1570
00:57:24,070 --> 00:57:27,100


1571
00:57:27,100 --> 00:57:29,800


1572
00:57:29,800 --> 00:57:31,690


1573
00:57:31,690 --> 00:57:33,310


1574
00:57:33,310 --> 00:57:35,770


1575
00:57:35,770 --> 00:57:37,390


1576
00:57:37,390 --> 00:57:38,890


1577
00:57:38,890 --> 00:57:42,430


1578
00:57:42,430 --> 00:57:44,590


1579
00:57:44,590 --> 00:57:47,080


1580
00:57:47,080 --> 00:57:49,000


1581
00:57:49,000 --> 00:57:50,890


1582
00:57:50,890 --> 00:57:54,280


1583
00:57:54,280 --> 00:57:56,110


1584
00:57:56,110 --> 00:57:58,090


1585
00:57:58,090 --> 00:58:00,580


1586
00:58:00,580 --> 00:58:02,860


1587
00:58:02,860 --> 00:58:04,450


1588
00:58:04,450 --> 00:58:06,010


1589
00:58:06,010 --> 00:58:08,110


1590
00:58:08,110 --> 00:58:11,710


1591
00:58:11,710 --> 00:58:14,350


1592
00:58:14,350 --> 00:58:16,000


1593
00:58:16,000 --> 00:58:18,400


1594
00:58:18,400 --> 00:58:21,370


1595
00:58:21,370 --> 00:58:24,100


1596
00:58:24,100 --> 00:58:24,970


1597
00:58:24,970 --> 00:58:26,830


1598
00:58:26,830 --> 00:58:28,660


1599
00:58:28,660 --> 00:58:30,730


1600
00:58:30,730 --> 00:58:32,830


1601
00:58:32,830 --> 00:58:35,080


1602
00:58:35,080 --> 00:58:36,670


1603
00:58:36,670 --> 00:58:39,010


1604
00:58:39,010 --> 00:58:40,420


1605
00:58:40,420 --> 00:58:42,160


1606
00:58:42,160 --> 00:58:44,560


1607
00:58:44,560 --> 00:58:46,360


1608
00:58:46,360 --> 00:58:47,980


1609
00:58:47,980 --> 00:58:49,480


1610
00:58:49,480 --> 00:58:53,680


1611
00:58:53,680 --> 00:58:54,970


1612
00:58:54,970 --> 00:58:57,490


1613
00:58:57,490 --> 00:58:58,660


1614
00:58:58,660 --> 00:58:59,560


1615
00:58:59,560 --> 00:59:01,630


1616
00:59:01,630 --> 00:59:04,180


1617
00:59:04,180 --> 00:59:05,260


1618
00:59:05,260 --> 00:59:06,400


1619
00:59:06,400 --> 00:59:08,410


1620
00:59:08,410 --> 00:59:10,840


1621
00:59:10,840 --> 00:59:12,430


1622
00:59:12,430 --> 00:59:14,500


1623
00:59:14,500 --> 00:59:16,570


1624
00:59:16,570 --> 00:59:18,640


1625
00:59:18,640 --> 00:59:19,300


1626
00:59:19,300 --> 00:59:20,590


1627
00:59:20,590 --> 00:59:22,750


1628
00:59:22,750 --> 00:59:25,090


1629
00:59:25,090 --> 00:59:26,410


1630
00:59:26,410 --> 00:59:29,800


1631
00:59:29,800 --> 00:59:30,340


1632
00:59:30,340 --> 00:59:35,980


1633
00:59:35,980 --> 00:59:38,080


1634
00:59:38,080 --> 00:59:41,200


1635
00:59:41,200 --> 00:59:43,270


1636
00:59:43,270 --> 00:59:44,830


1637
00:59:44,830 --> 00:59:47,290


1638
00:59:47,290 --> 00:59:49,480


1639
00:59:49,480 --> 00:59:51,610


1640
00:59:51,610 --> 00:59:53,260


1641
00:59:53,260 --> 00:59:54,310


1642
00:59:54,310 --> 00:59:56,140


1643
00:59:56,140 --> 00:59:57,910


1644
00:59:57,910 --> 01:00:01,540


1645
01:00:01,540 --> 01:00:04,930


1646
01:00:04,930 --> 01:00:07,630


1647
01:00:07,630 --> 01:00:08,740


1648
01:00:08,740 --> 01:00:11,200


1649
01:00:11,200 --> 01:00:12,700


1650
01:00:12,700 --> 01:00:15,850


1651
01:00:15,850 --> 01:00:17,170


1652
01:00:17,170 --> 01:00:19,480


1653
01:00:19,480 --> 01:00:22,120


1654
01:00:22,120 --> 01:00:23,710


1655
01:00:23,710 --> 01:00:25,330


1656
01:00:25,330 --> 01:00:27,670


1657
01:00:27,670 --> 01:00:28,990


1658
01:00:28,990 --> 01:00:31,690


1659
01:00:31,690 --> 01:00:33,790


1660
01:00:33,790 --> 01:00:36,190


1661
01:00:36,190 --> 01:00:39,130


1662
01:00:39,130 --> 01:00:40,030


1663
01:00:40,030 --> 01:00:41,620


1664
01:00:41,620 --> 01:00:43,660


1665
01:00:43,660 --> 01:00:45,340


1666
01:00:45,340 --> 01:00:46,390


1667
01:00:46,390 --> 01:00:47,860


1668
01:00:47,860 --> 01:00:50,170


1669
01:00:50,170 --> 01:00:52,000
[音乐] [掌声] [音乐] [掌声] [音乐] 好的，所以今天我们谈论的是协议，所以在中断课程中会有一些你知道的我们谈论我们谈论的领域我们谈论我们想要的 为了恢复崩溃后的日子和内存数据库，我们将做完全相同的事情，显然，如果我们的数据库你知道假装它已经关闭并崩溃了，我们将不希望能够重新启动系统并放置 数据库恢复到正确的状态，这样我们就保证了资产的种族性和持久性，保证了他们拥有一个正确的资产系统，所以仇恨意味着我们不能有任何部分事务的一致性意味着我们不把数据库和像一个时髦的 数据可能实际上不正确的状态，然后持久性只是意味着您知道如果我们将更改写入数据库，我们告诉我们提交事务，当我们回来时，外界会听到该事务已提交 我们所有的更改仍然存在，所以每个恢复算法都会有两个部分，我们将在运行时做的部分，当我们处理事务并更新数据库时，我们将采取一些额外的步骤来记录一些额外的信息，所以 如果我们崩溃并回来，我们可以查看额外的额外信息，以找出系统中发生的事情，使我们回到正确的状态，然后有您在崩溃后或失败后实际执行的恢复协议 看看你在正常处理中收集到的所有信息，然后你就会明白我需要做什么才能回去，所以我们会谈谈我们花时间拿了我的 Mme 数据库或日志记录部分 在我让你们阅读的所有协议中，我让你们阅读的论文不在内存数据库中，我将解释为什么我分配它当你回顾时，实际上没有很多但没有很多关于内存数据库登录恢复的论文 在 1980 年代的早期，他们都做出了一个重大假设，即日志或数据库本身将在 1980 年代由所谓的非易失性内存或持久性内存支持，只有薄荷电池支持的 DRAM，所以你有一个 主板上的小电池可以随时触发，当您意识到电源可能会下降时，他们使用电池实际上优雅地关闭了内存，将其从磁盘中读出，因此当您返回所有内容或 D Ram 时 所以电池供电的 FD 运行已经存在很长时间了 它没有被广泛使用，因为它占用了主板上的空间 它们很好，直到您尝试使用它们并且它们无法正常工作，因为您必须确保 电池始终运行正常，因此如果您肯定不能去亚马逊并获得具有此功能的 AWS 实例，则不会经常看到墙壁，因此使用另一种持久内存而不是 betti  NG 电池回 DRAM 要做的是所谓的真正的非易失性存储器或真正的持久性存储器，因此多年来，每次我教这门课时，我都会说哦，小说，你知道真正的新奇记忆是从一年开始出现的 现在一年后，终于在去年，英特尔加紧发布了真正的非易失性存储器，称为 op 团队，再一次的想法是，它像往常一样使用 DRAM 进入昏暗的插槽，但这里面有魔法 说你知道如果我断电我仍然保持一切它比 DRAM 慢一点，但它比 SSD 快得多，所以我们现在不会谈论 nvm 的东西或将它传递到内存，我们将介绍这一点 在学期结束时，是的，问题是它真的很贵，你怎么说哦，是的，不，它不像是古怪的，它可能是几千，比如一百二十八场演出或类似的东西，我不知道” 不知道 确切的价格我不认为在打磨它们之前你可以从 OEM 那里得到，但是它比 DRAM 比 SSD 更昂贵，但就像它具有某些你无法从 SSD 中获得的特性一样，你可以 还可以将它的外形尺寸缩小到 PCI Express 上，因此它看起来像一个闪存驱动器，即使它很特殊，基本上它不是 NAND 闪存，也不是 DRAM，它是一种特殊的存储介质，称为相变存储器，您可以将其放入 其他形式因素，尽管价格接近 SSD 的价格，但对于暗淡的东西，它更贵，我们将在本学期晚些时候介绍这一点，如果您阅读有关日志的早期论文 内存数据库中的协议他们都假设这一点，但当时他们并没有真正拥有它，所以我们仍然必须使用依赖 SSD 或仅使用硬盘来设计我们的协议，所以对我们来说，在创新基础上的好处是我们的 恢复   协议会比我们在 dis 坐标系统中做的要容易一些，这只是因为当我们崩溃或出现内存擦除故障时，由于主数据库的存储位置在内存中 所以当我们回来时，我们需要做的就是加载最后一个检查点并从磁盘重放规则，我们不必担心可能在磁盘上链接的事务中的任何脏页，我们必须反转为 我们会在磁盘坐标系中，这样我们就不必在运行时跟踪脏页，就像它实际上做了一些更改然后它没有提交并且我们崩溃了所有这些内存页都被擦除了所以这一切都很好 是的，这意味着现在我们不必存储撤消记录来反转这些事情，因为没有什么可以反转我们唯一需要写出磁盘的只是重做信息，另一个很大的区别是我们 我不会 og 我们对索引所做的任何更改，因此在基于磁盘的系统中，当我更新我的表并导致更新索引时，我还将创建日志记录来记录对索引的更改，但在内存数据库中我没有 做任何这样的事情，所以当我崩溃时，无论如何我都必须从检查点文件中重新加载数据库，所以磁盘比进行计算要昂贵得多，所以我只是要即时重建索引，因为我喜欢检查点 在基于磁盘的系统中和在基于磁盘的系统中，您不会这样做，因此我们仍然必须处理磁盘会变慢的事实，因此我们仍然希望利用我们在 Discordian 系统中所做的所有优化，例如组提交批处理 做镜面锁定的事情会释放诸如此类的事情，即使我们在内存中，所有这些优化仍然适用于我们，所以今天我将首先讨论不同类型的日志记录方案，然后你们阅读的论文是 为了  一个磁盘或名称系统，但它依赖于多版本控制，所以我认为这很好，我们将看到它是如何工作的，然后我们将讨论检查点协议，这里的这两个是你需要保证你的数据库实际上是这样的 你真正需要保证你的数据库是持久的这是一种在崩溃后加快速度的方法，如果你要重新启动并且你知道它会被安排在某个时间，这是一种加快速度的方法 所以有一个你必须绝对必须有这个是一个优化，使这个过程更快，这是一个优化，以避免必须做这一切没问题，所以在高层次上有两种类型的日志记录方案，这种物理日志记录和 逻辑日志 物理日志就像它采用 DIF，因为您不会想到的是，如果您还想到 NBC C，我们将记录我们在咬级级别对记录所做的更改 '正在使用不死的 你我只是记录我这里是我修改的列这里是新值所以然后在崩溃后我们基本上很好它会重播这些日志记录并将更改重新应用于列另一种方法是进行逻辑日志记录和这个 不是在元组中存储和修改低级字节的地方，我们只是要存储 cap 应用程序调用或在 davison 上请求进行更改的高级操作，因此它就像记录 他们会向我们发送答案的实际续集声明更新删除查询所以这里的想法是如果我有一个数据库但表有一千个元组，例如如果我正在使用一个需要的查询进行物理日志记录，则使它变大可能是十亿个元组 更新我需要 10 亿个日志记录的所有 10 亿个元组，对应于我购买的每个我修改过的元组，但如果我在做逻辑日志记录，那么我只需要记录那个更新 声明，这足以让我的系统在重新启动后真正播放该更新并使我回到正确的状态，因此逻辑日志记录会说日志文件要小得多，并且在运行时提交可能要快得多，但恢复过程可能会更昂贵 因为在恢复期间没有什么魔法可以让这个更新更快，所以但是如果我必须更新十亿个元组并且在我崩溃并重新启动并重播此更新查询后第一次运行它需要一个小时它可能需要一个 你又知道一个小时了，所以我花了一些时间让我的数据库重新上线所以因此大多数系统将选择物理博客，这仅用于某些专业系统，现在问题是 我们什么时候真正地处理事务生成的日志记录，所以第一种方法是一次性执行所有操作，这意味着当事务运行并且他们正在进行更改时 xecuting 更新数据库的查询无关紧要它是物理日志记录还是逻辑日志记录我只是要在内存中记录我的事务的日志缓冲区这里是所有日志记录，并且仅当事务说继续并提交我们 通过我们的验证，然后我们将这些日志记录移交给我们的某个记录器线程，然后该线程将其刷新到磁盘过程中我们必须等到所有这些不法分子都写入磁盘才能告诉外界我们的事务已提交，因此它可能是 你知道更新的十亿元组和修复墙记录要么等待那 10 亿低你的博客记录写入磁盘另一种方法进行增量刷新，这是一个 sh 事务运行，并在这些记录法则时累积这些记录 '当他们的本地日志缓冲区已满时，他们可以将其交给某个写入器线程，然后该线程可以开始写入磁盘，然后 y 获得一个新的日志缓冲区来开始填充新的日志记录，这意味着如果现在日志中发生崩溃，可能会有来自尚未正确提交的事务的日志记录，因为我们允许之前的内容被写出 一切都完成了，所以在这里的这种方法一下子就可以使恢复更容易，因为我知道如果我崩溃并回来，我几乎永远不会看到未提交的事务的日志记录我可能会看到一个事务确实提交了，他们 开始写出他们所有的日志记录，但他们但我们在我们写下它的其余部分和提交消息之前崩溃了，在这种情况下我当然必须撤消它，但大多数时候我会在增量的情况下拥有所有日志记录 刷新 我必须做一些额外的工作才能弄清楚这里有一堆尚未完成的交易让我继续并确保我没有应用他们的更改所以这不是什么大问题因为我们再次 做 无论如何，不要写出我们从支票重新加载的任何脏页，这只是我们必须做一些额外的过程，唱主歌确保我们跳过应该犯下的事情是的，是的，上帝支持的那 50 亿件事是的，是的 再次破解是的，没有什么可撤消的，但更新了什么并更新了内存页面中的内容我们崩溃了记忆消失了所以当我们重新上线时我们正在加载检查点没有脏页面对的只是在这种情况下就像我们会说话 关于下一堂课的复制，但就像我什么时候将外部世界像玩具一样发送到复制品嘿这里是我在这种情况下的交易的所有资金更新 - 如果我更新 100 亿元组，我必须有一个日志 可以处理 100 亿个元组的缓冲区，我可能会耗尽内存，因此大多数系统都会采用这种方法，但是这样做有一些好处，这些是我们讨论过的标准技术 在介绍类中，它仍然适用于 Murray 系统中的我们，因此我们将进行组提交它只是意味着我们有这个日志缓冲区，我们可以用来自不同事务的博客记录填充，然后我们可以 每当日志缓冲区已满时将它们刷新，然后有一个日志缓冲区，另一个日志缓冲区开始被其他事务填满，这里的想法是我们在分摊多个事务的基本成本时，如果您是第一个退出的人 这个队列是的，你等待的时间最长，因为它在等待日志缓冲区填满，但如果他们是最后一个人，那么你基本上是在使用专用的 F 同步运行，所以这是一种非常古老的技术，正如我所说的 今天几乎在每个系统中都使用它最初是为这种叫做快速路径的东西开发的，它是 1980 年代早期 ibm IMS 的专用内存引擎，但就像我说的，今天每个人都这样做 我们现在可以做的另一件事与我们在 Andrew MVCC 上的 Hecate 下看到的推测锁定释放或镜面读取相关的是，当事务进行时，它会继续并提交，我们不必等待更新变得持久 在我们释放所有锁之前在磁盘上我们可以让其他事务开始修改我们修改过的元组 已刷新到磁盘，我们必须跟踪我们已将这些规范写入读取，即使它的逻辑事务是物理提交的，但尚未造成磁盘间隙，因此我们知道，如果有任何可以读取某些内容的术语，我们 写道，我们确实有他们必须停止，直到我们真正刷新磁盘，这意味着我的只读事务然后它从您的事务中读取更新，但您的事务已被写入 在我再次提交之前，我必须等待您刷新磁盘 这是一种标准技术，NBCC 您知道我们会知道此信息，因为我们维护和维护状态映射，该状态映射表示尚未刷新事务日志记录 所以如果你从他们那里读到一些东西你就不能马上提交 所以我现在在最后几张幻灯片中稍微提到了这一点 如果我们有一个多版本系统 那么我们将要生成的 Delta 记录 对于 MVCC 或多或少与我们要在日志中生成的内容相同，它并不完全相同，因为根据执行订单的最新或最旧的权限，我们可能会为我们的元组正在修改生成重做记录或撤消记录，而 数据库日志文件希望在内存数据库中至少有四个重做记录，所以我们的想法是，如果我们可以将我们为 MVCC 生成的所有元数据与所有 元数据或 Jenny 用日志文件生成，这样我们就不会重复这项工作，所以这就是我让你们今天阅读的论文，它就在今年或去年发表，而且是 2019 年，正如我所说的 它不是一个内存系统，而是一个多版本系统，我认为它很好地描述了如何利用正在生成的 MVCC 元数据使日志记录可能工作得更好，因此该协议将成为物理日志记录协议 那是我们依赖数据库系统我是他们称之为原始存储或临时 TBT 的旅行表，所以我们将依靠他们的时间来拥有一个几乎充当恢复日志的表，所以我们会发生什么” 将开始把我们对这个版本存储所做的更改写入日志文件，但它们基本上只包含我们生成的版本的重做记录，然后当我们崩溃时我们会见面以返回我们需要的所有内容 现在要做的就是在这个版本中很糟糕 重新进入磁盘正在将 alpha 磁盘启动到内存中，我们不需要立即撤消任何操作，我只需将这些页面带回来，然后数据库现在处于崩溃时的状态，然后我们只需要 做一些背景额外的工作来做这个逻辑混响，以确保我们不会读取我们不会从已经敲门的事务中保留版本的东西，这些事务在崩溃时没有提交，所以如果他们在中提到他们试图解决的问题 论文是他们有某些客户在云中的 Azure 或云中的后续服务器上运行，在那里他们会有这些非常长的事务，现在发生崩溃时我需要撤消所有更改，所以这个 100 亿表更新我们只是 提到如果我在完成所有这些元组更新之前崩溃，当我回来时我花了很长时间来撤消所有事情，所以他们想要做的是他们所谓的恒定时间恢复 说我将数据库恢复到正确状态所需的时间仅取决于日志文件的大小，因为我只需要能够在重做阶段读取它，而我不需要' 不用担心我要花多少时间反向操作来撤消有意义的事情，所以让我们去我的桌子，然后我们将看看它是如何工作的，所以这又是续集服务器，因为你的续集是 它的云版本，但正如我所说，他们针对此功能推出了内部部署版本，其中包括 Linux 版本，因此他们正在进行时间旅行版本存储，但他们只是将其称为版本存储，因此这个想法 这是你有主表，它有最新版本，他们正在做最旧的新闻，所以这个版本现在有一个指向另一个元组的指针，这是你知道的下一个最旧的元组，然后有一个处女 链允许回到过去找到以前的 版本所以现在如果实际出现的道路几乎更新这个元组，我们首先将当前版本的副本复制到我们的版本存储中更新指针以连接链，然后我们可以用我们的新版本覆盖旧版本，就这样 这里的想法是，他们想利用这个基本上是重做信息的东西，然后允许他们通过重新加载这个东西来恢复数据库的状态，所以他们可以有两种方式来做 这个持久的版本风暴所以第一个是他们将在行版本控制中进行，这实际上是您不会使用版本存储，这看起来像蝉内联，而不是制作元组的整个副本 并将其放入版本存储中，他们会将其打包在这个特殊字段中的 Delta 记录元组中，其中包含修改的内容，然后将其写出到右侧日志中 就像任何其他元组更新一样，这是重新创建数据库状态的足够信息，我将在下一行显示此信息，然后显示实际使用时间旅行表而不是时间旅行表的越野版本控制 你的数据库中的每个逻辑表他们都会为每个表创建一个巨大的时间旅行表，这是不同的我以前从未见过使用过它，所以它的工作方式是在这里而不是具有离散列 或代表表中列的属性会有一个列，然后存储一个 blob 或字节字符串的先见者谎言该元组的数据，这样你就可以在那里存储任何表元组，因为没有我们都是 我们在某种程度上我们没有对查看此右侧的实际列进行任何处理，我们只是几乎将其用作内存中的日志，然后它会被刷新，因此他们也将修改 数据表的数据结构本身，这样你就可以进行快速和当前的插入，这意味着他们将在内存中对数据库进行分区，以便我们在内存中启动表，以便不同的线程写入表的不同区域，然后 这使您可以非常快速地将它们写出很长一段时间，并且您永远不会被允许返回并更新任何其他元组，这只是一个未决状态，我现在可以对法律进行中央写出 高效所以这是兄弟版本控制这与我们与蝉基本上讨论过的事情相同 然后就像你通常会写的那样写一个头部记录器，所以这里有一个重要的区别，关于为什么他们可以这样做以及为什么我们不能很容易地做到这一点，一个金刚砂数据库系统是 在面向磁盘的数据库中，内存数据库中的元组可以是可变长度的 一定的大小，如果我们在内存中，但在一个移位的数据库中，我可以将这个东西留空，然后如果我决定在我开始新元组时使用它，那么我只需在我的页面中获取一个新插槽，就可以正确地写出所有内容 这是他们正在做什么和你如何在内存数据库中做这件事之间的一个重要区别，好吧，让我们看看他们将如何进行恢复，所以这几乎看起来像标准 Aires，除了在 Aires 下数据库不是 可用，直到您在他们的世界中完成撤消阶段之后，在重做阶段之后才可以使用它，因为他们所做的就是重新加载该版本存储中的所有版本，然后旧版本的所有版本现在都是您 知道现在可用，然后我们只是捎带我们在 MVCC 上进行的所有相同版本检测或识别，以识别哪些元组对我们的事务实际上是可见的，因此再次分析阶段，我们只是通过日志直到最后一个检查点来计算 找出我们正在运行的事务，然后在重做重做阶段，我们将重放正确的提前日志，使我们回到 Virgen 存储中最主表的正确状态，但正如我所说的，边缘存储只会运行 它将包含来自未提交事务的版本，所以我在主表中，但因为我们是 MVCC，我们知道版本的时间戳是什么，然后当我们回到网上时开始运行河流事务，我们会注意到 跳过未提交的事情，因为我们将维护这个全局状态图，上面写着这里是所有的交易，这是他们在撤消阶段的状态 我们选择事务开始执行，当他们发现被中止的事情时，他们可以继续清理它们或者有一个单独的后台进程 - 清理它们并且是异步的，他们将这件事称为合乎逻辑的工作 但从我的目的来看，这听起来像是垃圾收集，尽管事实上当交易发现一个版本时可以做一些略有不同的事情并不完全是关于风险瘦素说这已经是它所说的所以你有单独的线程要扫描 通过块找到所有的犯罪版本，然后如果您发现元组的最新版本在版本存储中，那么您只需将它移回您知道的赌注再次进入主表，这与我们会看到的相同，并且 我们已经讨论过的常规 GC，他们所做的唯一一项优化确实略有不同，那就是如果事务在主要内容中认识到这一点 表我看到当前版本元组的主版本来自一个交易然后而不是复制它并制作一个新版本然后完全覆盖它的时间旅行再次像我说的那样我认为这很有趣 因为这是虽然它是一个基于磁盘的系统，但它向您展示了如何使用 MVCC 元数据来执行 Tiferet 的日志记录方案并可能获得更好的性能关于此的任何问题还有关于系统日志的其他一些问题，他们将在其中存储更改 对于非原始数据结构，如页表和人们的树布局，我们可以在内存系统中忽略所有这些，因为我们不会维护这些信息是的，是的，所以他在尖叫，他是正确的 这意味着在运行时，如果我需要阅读旧版本，我必须转到 Virgin Storm 并且序列化的所有内容都是一个 blob，我是否需要为阅读 t 支付罚款 是的，但我认为他们衡量它有点小，如果进入 Delta 记录，我必须重放它并可能为此支付计算成本，但这并不是因为它不像阅读和拥有一切那样免费 我同意你的看法，是的，这就是为什么我们在我们自己的系统中使用 Delta 故事我的大多数交易我记得如果他们说纸上的议案实际上没有更新它写的所有专栏 Delta 故事是结束回归通常就足够了 所以他们正在做的这个想法并不新鲜 这实际上与 Postgres 最初的设计方式非常相似，就像 1986 年再次 Postgres 如果有一篇名为 Postgres 的设计和明星制造商谈论日志有多好 不是真正的日志文件，它是一个日志表，所有的东西都得到了它的一个垂饰，它被刷新了所以在高层次上这是非常相似的，他们声称这里的区别在于 t 他的论文是关于采用一个不是以这种方式设计成多版本的系统，然后在事后添加这个，而 Postgres 从一开始就被设计成这样了 Postgres 是一个 MVC 系统，好吧，所以这又是一个 这是一个协议，它利用了我们是多版本的事实，所以现在让我们看看另一个用于 Mme 数据库的博客协议，它更多地是关于如何构建系统以了解 CPU 发生的情况 实际上是工作以及它们是如何运行的 所以筒仓是一个内存 OTP 嵌入式数据库引擎，它是由 Eddie Kohler 在哈佛开发的，所以它不会是多版本它会是一个使用的单一版本系统，他们将使用基于纪元的系统 垃圾收集协议，用于跟踪您何时实际提交事务并将事物从磁盘中刷新出来，因此这是孤岛，开发 Mastry 的人是他们写给您的 mash f 首先，他们围绕它建立了竖井，所以本文中的这篇论文提出了他们提出的物理狗技术，称为竖井 R，如果尝试尽可能地瘫痪所有日志记录检查点和恢复过程，以便我们获得最佳性能，该技术就会消失 并且他们要这样做的方式是他们将跨法庭的多个文件分解日志，这些文件可以存储在多个磁盘上，并允许同时并行读取它们 这样做的方式是，对于我系统中的每个 CPU 插槽，我都会有一个专用的更长的线程和专用的日志文件，这里的想法是我们想要本地化我们必须对本地插槽执行的所有内存权限 所以我们永远不会将共享内存转移到另一个套接字或互连，然后日志线程可以只是你知道尽可能快地将数据泵出到日志文件，所以现在随着事务的运行，他们会 从他们的本地记录器线程获取一个日志缓冲区，然后只写出重做信息，因为我们在内存中，我们不做任何撤消，在这种情况下，他们是为了简化假设所有日志记录 实际上，在这种情况下，事务将被写出，您可以进行增量操作，但在大多数情况下，它可以一次性完成，所以我已经保存了其中的一些，因此每个记录器都想拉出日志缓冲区，我们将它们分发给本地 当我的缓冲区已满时，与我们在同一个套接字上的工作线程我将它交还给我的标志线程，然后记录器线程可以开始将它写出磁盘，这意味着您可以进行增量刷新，然后工作线程尝试获取 新的日志缓冲区，如果没有更多可用的日志缓冲区，那么工作线程必须停止，直到记录器线程回来并说你知道他已经闪出足够多的这里是一个新的日志线程或日志缓冲区，所以现在会发生什么 因为现在我们的日志文件分散在不同磁盘上的多个文件中，所以我们的事务可能会修改由不同 CPU 套接字管理的数据，因此该事务的日志记录可能会分散在不同的磁盘上，所以我需要 一种协调所有这些的方法，这样我就不会让你知道我是否接触了 2 个日志文件 Mitra 的操作提交了第一个日志文件被刷新但第二个没有然后我告诉外界我崩溃了，我 回来，现在您知道来自另一个日志文件的一半更新从未将其写入磁盘，因此您需要一种方法来协调所有更新，以便您知道每个事务的所有更新都已安全刷新，这就是时代 会为我们做所以会发生的事情是每隔一段时间我所有的日志这个时代都会增加，这迫使每个日志线程都在那里日志缓冲区的当前内容，然后我们记录什么是th 每个人都写过的纪元，现在我们知道在那个纪元之前已经提交和刷新到磁盘的任何事务现在都是持久的，我们可以告诉外界我们已经提交了他们将在其他纪元中使用这个纪元 系统中再次最小化跨不同 CPU 套接字的协调的方法，但出于我们的目的，我们可以只关注我们如何进行日志记录，以便我们的日志记录包含修改给定元组的事务的想法，并且筒仓将被序列化 可序列化的隔离或可消毒的调度，这意味着事务 ID 将足以保证对数据库更新的正确排序，因此如果我们只是按照事务 ID 的顺序重放日志，那么这将使我们回到 在较低的隔离级别进入正确的状态，您不能这样做，因为 II 可能会更新某些内容，您可能会读取某些内容并更新其他内容，除非我们有日志 秘密编号来订购那些东西我们可能会回来并以不同的顺序重播所以如果通过消毒我们可以保证这将波特回到正确的状态是的它不是快照隔离来保证是的 如果你的第一个作者赢了，那也解决了这个问题，但主要的收获是事务 T 足以保证让你回到正确状态的排序，你不需要单独的日志无缝编号，因为日志无缝 如果跨多个套接字的 90 个老生常谈，那么这是一个瓶颈，因此日志文件将是一个三元组，只有表、键和被修改的值，而值可以只是实际更改的 Delta 记录 事实上，如果我正在做简单的查询来更新所有比我自己更蹩脚的人，那么记录法则将会为每个元组都有一个单独的日志记录，这就是这件事 修改好了好了 所以这里是系统的高级架构，这里的想法是我将向您展示或向您展示，嘿，您知道这只是物理日志记录，所以这里没有任何真正的新奇事物，它是如何做的 他们组织了我认为实际上非常有趣的系统，并且我没有看到我还没有看到任何其他系统，因此事务可以更新或更新到它们的工作线程或可以执行事务，因此它们只会执行 这些存储过程的东西他们曾经调用它们不是事务，但基本思想是我们像 RPC 一样执行此事务的请求，并且所有程序在该事务将要执行的操作都嵌入到系统中时，因此我们永远不会回到 客户端一切都在一次调用中完成，因此当事务开始运行时，工作线程必须转到记录器并获取日志缓冲区，一旦有了它，我就可以开始填写更改 s 那就是它开始写入数据库，并且在某个时候这个日志缓冲区会满，所以我们把它交还给线程的日志并说这个东西已满请为我们刷新它，我们将继续获取另一个日志缓冲区 所以现在在这一点上说事务仍在运行这个另一个纪元线程等待并说现在新纪元是 200 所以这将强制系统中所有较长的线程现在刷新他们拥有的任何缓冲区，包括任何缓冲区 之前交接的，所以现在工作线程必须将您的日志缓冲区交还给日志记录朋友，然后它可以继续运行它可以说现在给我另一个日志缓冲区开始填满，但在这种情况下，这里没有' 不再有所以它必须停止并等待所以现在我们的线程可以开始将日志从磁盘中刷新出来，并且在刷新它们时它会释放日志空间，然后我们可以交还日志缓冲区并让这个人继续 茹 所以在最简单的世界中，假设每笔交易都将在 epoch 内完成，如果它跨越多痘，那么你基本上必须跟踪这个交易是否围绕它跨越多痘，这样你就可以在我进一步返回日志时 弄清楚它到底发生了什么，但这里的主要思想是，通过使用这个背包 Schurman 压力机制，如果我们用完日志缓冲区，我们不会分配更多内存，我们会让这个家伙停顿，从而阻止我们更快地生成日志记录 比我们实际上可以将它们写出磁盘因为否则日志缓冲区只会无限增长并且我们将耗尽空间所以让我们谈谈这个持久的 EVOC 事情实际上是这样做的所以每个工人每个记录器线程都可以拥有 CERN 文件或记录所有 交易在运行时生成的 Delta 记录，但随后可能会有一个特殊的日志文件，我们可以在其中跟踪所有日志 o 的所有日志的高点时期 r 线程已成功刷新到磁盘现在每个人都在同一时间刷新当时代增加时的位置时您告诉每个人刷新但它们可能不会完全以相同的速度发生并且只有当每个人都说好时我才刷新它 你去更新和更新持久的纪元现在你不需要这个为了正确性这实际上只是一个优化，所以当你崩溃时你回来你可以看看这个文件然后说好吧我需要开始的纪元是什么 否则，您将不得不查看每个文件，以找出在所有文件的时代交叉点中您所知道的内容，这只是一种优化，它很好，而且开销有点大 除了 F 同步之外的小，所以我们知道如果这件事被写出磁盘，那么我们知道在小于或等于我们的位置纪元的纪元中执行的任何事务我们都知道 ow是持久的，所以看起来我们现在有三个标志线程，每个都有自己的日志文件运行到磁盘，每个都有一堆工作线程，这些人只是去获取日志 来自记录器线程的缓冲区，然后你现在有了这个特殊的精确纪元线程，它将每隔一段时间更新磁盘上的文件，现在纪元发生变化，所以每个人都有然后刷新他们在那个纪元之前的所有更改。 然后用这个时代线程确认他们已经写出到磁盘的精确 T 黑色线程然后我们被允许继续写出人 T Bach 文件所以对于这个我喜欢我说你不需要这个 正确性这只是不是位置所以我认为你实际上不需要它成为另一个像这些一样的 F 接收器 做你想让他们知道你必须制作磁盘我认为如果你在 s 接收器中崩溃 现在你必须执行 if 你会依靠这个来找出所有它们之间的时代的交集你必须正确地下沉，你可以再击败5毫秒是的，他们不是检查站的年龄这些只是日志记录三 更多站点 好的 检查点 是的，但是这就是检查点酱 是的 这又是这里的架构是如何跨多个磁盘测试 arrogated 日志文件，你是否只有一些集中位置，你只在这件事发生变化时才更新 他们每 40 毫秒执行一次这样的纸张大小，因此在实际系统中这是有问题的，因为如果您需要像亚毫秒级的交易延迟，您将无法到达那里，当我 问他们为什么选择 40 毫秒 他们说这似乎是一个不错的数字，因此您可以将其降低，因此此内容每 10 毫秒或 5 毫秒更新一次，但现在 你冲洗了很多，这件事被写了很多，你现在可能有跨越多个时期的交易，你必须做更多的事情并恢复来处理这一切，所以现在下一张幻灯片我们得到你的问题 在几张幻灯片中更详细地讨论检查点，但正如他所说，如果您没有检查点，那么这些日志文件会永远增长，当我使它们崩溃并重新启动时，我必须返回并可能查看整个日志文件 所以每隔一段时间他们就会采取一个检查点，然后当你必须恢复时，你加载最后一个检查点，以及你必须查看多少日志文件的界限，他们将重建基于索引的 在检查点上，正如我已经说过的，因为我们现在不会为索引创建任何日志记录，但与基于磁盘的系统不同的是，非常有趣的是，当它们进行恢复而不是在 r 中进行时 edo 阶段，你在 acetyl server 上看到，他们从过去的某个时间点开始，他们处理日志记录，按时间前进 我们可以这样做，因为我们在内存中，因为我们知道周围没有脏页，它们是从最后一个检查点加载的，因此当我们重放日志时，我们只需要知道最终状态应该是什么 一个元组的数据库的，以便我说这个已经但是已经恢复的数据，所以如果我有一个被更新了 20 次的元组，如果我要颠倒顺序，我不需要重播那个日志 记录所有这 20 个更新 我需要找到最后一个更新并应用它，这与您在丢弃系统中执行此操作完全不同，因为再次脏页可能已写入磁盘，因此在某些时候我需要我需要我有 重播一切 hing 然后撤消所有不应该发生的事情，以便他们将跟踪事务 ID 和每两个板以跟踪此元组更新时的时间戳，以便在我重播时 log immerse order 如果我发现一个日志记录的时间戳小于当前发布时间 Stan 意思是在未来被我在日志中重放的事务更新然后我可以忽略该日志记录，我不 我不想应用它，所以如果我只是一遍又一遍地更新我的日志中的一小部分元组，我可能会意识到你知道你可能知道日志记录数据的第一兆字节我可以忽略所有内容 否则在那之后我仍然想看看它但我仍然不重播它是的问题如果它不是类似的版本这将不起作用如果你不需要旧版本我认为这没关系所以你可以 如果我不需要旧版本，那就说好了 因为好吧，一个是没有事务的，它不像重新启动后任何在重新启动之前正在运行的事务，当你回来时它不会神奇地重新出现，所以没有带有时间戳的准确运行时事务，你可能会阅读这些东西，所以我可以忽略 现在，如果我正在尝试进行审核日志或保留新的时间旅行查询，那么是的，我必须重播所有内容，然后是的，这行不通，我仍然需要重做，但如果我不关心它的谨慎方式 最新版本那么这有效的原因大多数系统不这样做的原因是，当您进行复制时，我将在下一堂课中讨论，副本本质上就像在恢复模式下一样，从不只是重播日志，因此如果您从最旧的开始进行 到最新，如果现在我有一个专门的恢复模式，我可以在单个节点上进行逆向操作，那么你可以在副本上做同样的事情，你可以在副本上做同样的事情。 必须基本上重新实现两次，所以样式是我知道的唯一系统，它只是一种有趣的思考方式，尽管我喜欢这种方式，我认为我们已经讨论过了，所以我们继续 我们查看持久纪元文件，找出刷新到磁盘的最新持久纪元是什么，然后随着我们的传输，我们的线程日志开始重放日志，他们只是忽略任何比这个新纪元更大的东西，实际上我已经说过了 这一切都在此之前，因为如果我认识到元组已经被稍后出现在我已经处理的日志中的事务修改，那么我们将从最新到最旧，然后我不需要重播该日志记录好吧好吧 现在我们还可以更详细地检查一次，因为我们已经说过日志文件可以永远增长，这意味着如果我有一年的价值，我可能会在每次重新启动时重播整个日志 没有检查点的日志，那么我可能需要一年时间来恢复数据库，这是无稽之谈，因为没有人可以做到这一点，因此对于 Mme 检查点，我们将选择的不同方法将与我们的控制方案紧密结合，并且 在某些方面，如果我们专注于主要版本系统 MVCC 那么检查点基本上可以变得容易，如果我们取决于你如何知道我们希望我们的检查点中的一致性级别是正确的，因为它可能只是我们刚刚开始 获取快照的事务扫描整个表，我们只写出对我们的快照可见的元组的所有版本以及我们不可见的任何内容，这意味着它将来会出现，我们将拥有日志记录和 我们只是重播，所以有一篇由 Dan Abadi 写的论文，几年前他在 sigmod 中做了一些关于平静源的早期工作，我们基本上列出了你想要的理想属性 内存数据库系统中的检查点和模式，这些看起来很明显，但重要的是要记住这些，所以显然我们不想减慢常规事务处理的速度，因为如果您知道我们可以运行得非常快，那就不好了 还有我去检查站，现在我们的系统速度减半，所以检查站计划的传统观点是，大约百分之十到十五的开销被认为是可以接受的，所以如果我要检查站，每隔一段时间每个城市 如果我的速度慢了 10%，那么人们也可以接受，同样，您不希望出现任何巨大的延迟峰值，这意味着我不想要阻塞检查方案我不想在我使用时阻塞系统或锁定表 检查点我有所有这些交易字段，然后最后我释放锁，然后它们被允许运行，因为这将是我们延迟的一个巨大峰值，人们会注意这一点 最后一个也是我们不想获得任何过多的内存开销，这意味着理想情况下，当我们写下我们希望能够最小化的检查点时，我们不必让您知道内存中的完整副本 开销是因为这给我们的游戏和许多带宽和缓存带来了压力，所以我们尽可能地减少这种开销，所以让我们谈谈您可以为任何内存数据库的检查点拥有的不同属性，所以这看起来像这里的 这里的想法与我们上学期讨论的置换系统非常相似，因此您有模糊检查点与一致检查点的概念，因此一致检查点是当写入磁盘的数据库快照仅包含来自再次提交的事务的更新时认为它只是 就像在具有快照隔离的 MVCC 下，我写入磁盘的文件只包含在事务 st 之前提交的事务的更新 现在当我在加载检查点时崩溃并重新启动时我不喜欢担心因为我的检查点包含未提交事务的更改它只包含已提交事务的更改所以这很容易用 MVCC 我' 我运行我的查询来扫描整个表并将其写出另一种方法来做模糊检查点，这是快照可以包含在我的检查点启动后提交的事务的更新的地方，所以我的检查点开始运行，我有一个更新的事务 两到两个元组并说我扫描了一半的表然后事务更新了我们已经通过的元组但是我还没有通过的元组我的检查点现在包含该事务的一半更新所以现在我 当我回来时必须做一些额外的事情，并意识到哦，我可能错过了一个更新，因为这家伙在我跑步时眉毛紧蹙，而我让 sur  e 我发现日志记录可以正确地重新应用，所以这是使用 MVCC 最容易做到的，这可能更快并且内存开销更少，因为现在我不必担心维护旧版本和暂停垃圾收集器 我的大多数系统都选择这个，这个在存储开销方面有优势，下一个是我们实际上将如何做检查点，所以我已经说过，自己动手实现这只是对 表并写出我发现对我可见的每一个元组另一种方法是做一个 OS Fork 所以这个想法很有趣，因为当我们在操作系统中调用 Fork 时 Mme 数据库发生了什么，我们有一个子进程 在那个子进程内存中，它与父进程完全相同，是的，问题是，它的工作方式是写时复制，所以我调用 fork 子进程现在已经映射到其中 的虚拟内存表所有相同的页面都是父进程，但如果父进程更新这些页面中的任何一个，或者如果我的子进程更新到这些页面，那么操作系统将复制它并为您的进程重新映射它 当父进程开始修改数据库中的内存时，子进程不会看到这一点，所以唯一一种真正采用这种方法的众所周知的数据系统是 Redis，所以这是出租的 Redis 需要检查点，他们可以做到这一点 因为它们是单线程单线程引擎所以是 Paul 的事务进行 fork 然后现在子进程可以有一个一致的快照它可以开始写出磁盘，如果你不这样做，如果你要允许的话 您不会在执行此操作时暂停所有事务或更新，然后在子进程中，您现在需要协调数据库以从您之前运行的事务中删除任何未提交的更改 ked so hyper 实际上是在那天做的 所以这是 2011 年的论文 这是 hyper 的第一个版本 它实际上受到了我正在研究的系统的影响或帮助建立了一家商店，然后成为 Polti be 所以他们基本上排序 他们构建了自己的 volte be 版本，但他们也想进行分析查询，因此他们会进行 OS Fork，然后在子进程上运行分析查询，而不会减慢运行事务的父进程的速度，然后他们也可以 带子进程并将该检查点与游戏一起写入磁盘，并且不会减慢父进程执行的速度，但是因为现在当他们采取检查点但进行分叉时，甚至可能有一些正在进行的事务正在运行 同时他们在子进程中，您需要查看内存中那些事务的撤消日志，并确保在那里反向反转数据库 的更改，以便您再次拥有一致的快照，然后在一段时间后，当检查点写入磁盘或完成处理分析查询时，他们将杀死子进程，所有内存都被清理，然后是父进程 会再次分叉它，所以 Redis 是唯一一个这样做的，它很容易做到，因为当我们尝试在每个工具中执行此操作时，除了 hyper 之外，我不知道有任何其他系统尝试过这种单线程，但我们 是基于 JVM 如果你阅读了 JVM 的手册并说不要分叉它我们说螺丝我们无论如何都分叉了但它也有问题因为就像地毯一样你有一堆僵尸线程因为像加尔巴 收集器没有得到 不会再次开始继续运行 其他后台的东西不会运行所以它会工作但这是一个坏主意好吧下一个问题是我们实际上要存储在我们的检查点中的两个方法 s 是做完整的检查点 Delta 检查点 完整的检查点只是把我的快照中的任何东西放在我的桌子上或我的数据库中的桌子上，然后在山上疲惫地写下磁盘 Delta 检查点是你尝试的地方 认识到自上次检查点以来发生了什么变化，只写出那些你知道的那些更新，所以大多数系统都做对了我知道的唯一一个做 Delta 检查点的系统是 hecatomb 正确的，因为问题是有一个完整的检查点 从某种行政管理的角度来看，我现在在磁盘上有这个文件 我可以说哦，这是我的检查点 这是在给定时间使用 Delta 检查点的数据库的确切快照 我需要保留一堆增量，因为 这个快照中可能有一些更新，但下一个快照中没有，为了让我确保将数据库恢复到我需要的正确状态 拥有所有这些，所以当 hackaton 执行此操作时，他们有一个后台线程，该线程将开始合并这些博士检查点，使其基本上成为一个巨大的完整检查点，但您需要注意这一点，您知道以下内容是您的文件 包含您正在查看的内容，因此这更容易实现浪费更多空间，但从工程和豪宅角度来看，这是更好的一种方法，也可以使这不会像我的数据库那样具有巨大的存储开销 1 TB 然后在 LAT 中自上次检查点更新 1 兆 这东西存储 1 兆 如果我将未压缩的数据存储在支持重复数据删除的文件系统上，则一遍又一遍地存储 1 TB 那么我写出的内存页面是 将被一遍又一遍地复制，文件系统可以削减你能不能知道为我压缩它们，这样你就可以依靠该数据库之外的东西来制作它 这件事实际上是站得住脚的，最后一个将是我们再次采取检查点的频率我们不能一直采取检查点但这可能会减慢常规交易工作量，所以通常你 要么说我将每隔固定时间间隔（例如每五分钟）触发检查点，要么在我将一定数量的数据写入日志文件后触发检查点，所以在这种情况下像这样 一个你可以限制他需要多少时间让你恢复就像说如果我的所有数据库崩溃了我们会在五分钟内回来所以我可以每四分钟检查一次所以我知道当我崩溃时我只有 最多四分钟的日志我需要重播才能让我回到正确的状态这个你可以做数学并弄清楚哦，如果我来你知道我是否可以以每秒一兆字节的速度重播日志然后如果我 设置好让你知道我会检查 100 兆字节后的 kpoint 然后我知道我可以在 100 秒内恢复，所以它们本质上是一样的，这只是考虑问题的不同方式，还有一些应用程序，你知道一些你可能不关心的应用程序 事物在单个节点内高度可用，他们可以使用副本来隐藏所有这些，因此也许您以更长的时间间隔或更长的秋季秋季缓冲区大小进行检查点，因此如果您有副本，如果 主崩溃，您可以 副本可以在无需恢复的情况下出现 日志将在星期三涵盖这一点 尽管我们需要做的另一件事是每个系统都必须做的是，如果发送的数据被告知嘿我们将关闭 然后我们想在我们默认的那一刻采取检查点或停止所有工作线程让他们完成任何正在运行的事务然后拍摄一个你知道完整的快照 CLE 检查其中一个 数据库是对的，这就是为什么你想告诉名字是嘿我想关闭不要只是不通过它你知道你杀了 - 9 并做一个硬 cig 术语你希望数据库能够写东西 优雅地退出，因为否则如果你这样做，那么你就不必重播法律，因为你知道数据库处于正确的状态，所以这只是一些 Mme DV 系统实际上做的其他事情的快速总结 我说的系统是关于你在商店的哪个方向做完整的检查点只有 hackaton 正在做的就是做 Delta 的，然后有什么有趣的就像一些 MVC 系统，比如数据包和 mem sequel 正在做一致的检查长游戏，就像快照隔离果汁一样 两个数据库都不是任何系统，但它们仍然有一些检查点，因为当你说我想要检查点时，他们会切换到这种规格 对两个版本或多版本系统进行初始化，其中您只有检查点处存在的元组版本，然后您只有另一个版本，该版本始终是最新版本，您不能有任何版本更改，除了 你只有两个版本，所以这就是他们如何做一致的检查点 alta base 实际上可以做模糊和一致的检查点我认为他们在十倍以下做同样的事情我们就像如果我要关闭我会做一个一致的阻塞检查点 但除此之外，我知道我采取了一个模糊检查点，Ahana 再次使用基于时间的模糊检查点 如果你在做 nbcc，不同的数据库系统会做不同的事情，而不是我认为做一致的检查点并拍摄褶皱快照是要走的路 找出他们实际写出的内容的工程开销较少，您只需扫描并写下所有内容，因此有关重新启动后再次检查的任何问题我都会加载检查点 当我扫描检查点时，我将数据复制到我的表中，当我这样做时，它本质上就像一个插入，我更新了该表上的任何索引，这样它们就可以正确填充它们，然后就完成了 完成现在重新上线是的问题是索引要复制的四件事取决于实现你不必正确是的所以对于是的所有索引都被复制我们知道如何你不必写 好吧，它再次监视它，这是浪费空间，我的索引很大，如果我要在恢复时重新填充它，那么磁盘 IO 写出来是不值得的，这样就可以交易青少年计算和存储，所以 我想很快谈论的最后一件事是如何进行快速重启，所以到目前为止我所谈论的所有内容都假设筒仓和续集服务器的崩溃恢复以及所有检查点的东西，哦，好吧，我们的系统运行良好的系统 r 发生了一些事情 有人被电源线绊倒 闪电击中了数据中心，我们发生了严重的崩溃 这是出乎意料的，但有时我们实际上可能需要重新启动数据库系统 这不会是因为崩溃 很常见 也许我们有 要更新我们的 les 库，Linux 中有一种称为 K splice 的技术，它允许您在不重启系统的情况下更新内核，但假设您不能总是这样做，有时您必须重新启动整个操作系统，当然您要升级硬件 有些光盘是可交换的，但我不认为变暗是因为你必须关闭系统才能放入新游戏，或者当然如果你要移动到另一个完全不同的硬件的 AWS 实例，然后有时你只是想 再次更新数据系统软件 Oracle 有一些技术可以让您在不使所有内容脱机的情况下进行修补，但大多数系统都没有，所以假设我们想要 o 在这里做这个可以放大这些我们必须重新启动没有办法解决这个问题但是在开始重新启动这里的整个盒子虽然我们不必重新启动我们没有的我们 重新启动硬件，所以有趣的是看看我们是否可以重新启动系统及其内存数据库，而不必从磁盘中刷新检查点，然后一遍又一遍地将其全部加载回来，这就是 Facebook 可以在他们的水肺潜水系统中做所以我将简要谈谈什么是水肺潜水但是就像你在介绍课上我们花了整整一整年你知道这就是学生们投票选出的最有趣的系统他们希望我这样做 谈论 so scuba 是它是 Facebook 开发的分布式内存 OLAP 系统，用于进行事件日志处理，因此每当您在 Facebook 中加载页面时，他们都会跟踪它为该请求记录触及的每个服务的每个阶段 一切  信息，然后将其从水肺中转储出来，这样你就可以进行分析，然后说找到我，你知道为什么我的页面请求比昨天慢 120%，因为他们一直在推送更新以进一步通过网络应用程序 他们想知道事情是否正在倒退，所以他们要做的是，当他们想要更新数据库系统软件时，而不是关闭它并采取检查点并将其全部加载回来，他们会写出来 数据库的内容本质上是共享内存的检查点重新启动该进程重新启动看到我的数据库状态现在在共享内存中并将其全部吸回它们实际上是在使用共享内存就像一个ram磁盘一样 有点有趣所以你知道我已经说过这是我系统中的分布式 Emery 它具有异构架构，带有叶节点和聚合器节点这对你来说不是太有趣 但需要注意的是，数据库的状态仅在这些叶节点上，聚合器节点和上面的根节点是无状态的，并且这些人生成了查询的组合结果，因此所有更新 插入新数据到这些叶节点，所以这是主要的搜索位置，所以如果我们想重新启动这些家伙，我们需要一种方法可以将其切碎共享内存，这样我们就不会将 foo 磁盘上的检查加载为高 它的工作方式是，如果我有这样的查询，他们会玩来计划片段并说这个人失败了这些人都会发送他们的更新然后我们将它们组合在一起以获得最终答案 这实际上基本上是男人续集的工作方式说得好唐卡这个故事是那个创立 mem 续集的人他在微软所有 Hecate 项目 bard 他们的一些我受到了他们的想法的启发去了 Facebook Deana 我不知道 nk 他是老派，但他看到了这一点 在 Facebook 的其他系统中使用的这种模式看到了这个想法，然后结合在一起使它们成为续集，所以有两种方法可以做到这一点，所以我们已经说过了，我们可以只做共享 内存堆，这样我们就可以在我们的系统中修改内存分配器，这样无论何时我们为存储在表中的数据调用 malloc 时，它现在位于共享内存中，而不是我的进程本地 如您所知，OSF 中没有开销说某些内容在共享内存中，因为它只是取回了我们的内存地址 知道这只是内存应该持续超过进程生命周期，所以要做到这一点，虽然你必须再次修改 J email 或 TC malloc 我们永远不会使用 malloc 实现你正在使用它能够将东西写出到共享内存和 能够有效地划分事物，以便多个线程遇到写入同一位置的情况，因此在论文中他们谈到他们如何不能对后备页面和共享内存进行延迟分配，这意味着如果我调用 malloc 和操作系统的共享内存 实际上需要得到物理内存的支持，所以他们在他们 Facebook 购买的人或 B 雇用了创建 je malloc 的人的论文中声称这一点，因此在论文中您将了解他们如何与 GE 交谈 Malachi，他说你不能这样做，我在 Twitter 上发布了这个，或者至少在 Twitter 上发布了这个幻灯片，然后一些家伙联系我说你实际上可以做到这一点，就像他实际尝试过的那样，至少在较新的版本中 v 你可以做的 Linux 版本你

1670
01:00:52,000 --> 01:00:54,070
可以分配内存共享内存，而

1671
01:00:54,070 --> 01:00:56,350
不是立即得到物理内存的支持，

1672
01:00:56,350 --> 01:00:59,170
所以这部分实际上

1673
01:00:59,170 --> 01:00:59,650
不再正确，

1674
01:00:59,650 --> 01:01:01,150
所以你实际上仍然可以这样做，

1675
01:01:01,150 --> 01:01:02,620
这样你就可以让你的内存

1676
01:01:02,620 --> 01:01:05,110
分配器分配页面 在堆和

1677
01:01:05,110 --> 01:01:07,450
共享内存上，不用担心任何

1678
01:01:07,450 --> 01:01:09,400
线程安全问题或立即支持

1679
01:01:09,400 --> 01:01:11,740
它，而是

1680
01:01:11,740 --> 01:01:14,470
在这个版本的 scuba 中他们要做的是，当

1681
01:01:14,470 --> 01:01:16,210
我被告知我的进程将

1682
01:01:16,210 --> 01:01:18,610
关闭时，我停止所有更新 从任何

1683
01:01:18,610 --> 01:01:20,350
事务中，任何查询都将

1684
01:01:20,350 --> 01:01:22,030
所有内容写入共享内存，然后

1685
01:01:22,030 --> 01:01:25,120
我继续并重新启动，因此他们会做

1686
01:01:25,120 --> 01:01:25,720
一些额外的工作

1687
01:01:25,720 --> 01:01:28,600
，在那里他们跟踪

1688
01:01:28,600 --> 01:01:31,930
他们正在

1689
01:01:31,930 --> 01:01:33,040
用完的共享内存的布局是

1690
01:01:33,040 --> 01:01:34,330
什么，例如版本是什么 他们写的返祖主义，

1691
01:01:34,330 --> 01:01:35,680
所以如果你重新启动并回来

1692
01:01:35,680 --> 01:01:36,100


1693
01:01:36,100 --> 01:01:38,560
，你会认识到哦，我有一些

1694
01:01:38,560 --> 01:01:40,780
数据库的共享内存内容，从

1695
01:01:40,780 --> 01:01:43,090
我重新启动之前的内容来看，他

1696
01:01:43,090 --> 01:01:44,200
是否确保躺着 out 仍然是

1697
01:01:44,200 --> 01:01:46,030
正确的，所以他们基本上维护了一些

1698
01:01:46,030 --> 01:01:47,530
额外的元数据，当他们用完

1699
01:01:47,530 --> 01:01:49,450
共享内存时说哦，我的

1700
01:01:49,450 --> 01:01:50,830
布局看起来像这个和这个版本，

1701
01:01:50,830 --> 01:01:52,060
所以如果我回来并且它不兼容，

1702
01:01:52,060 --> 01:01:55,570
那么我只需从桌面加载它 所以

1703
01:01:55,570 --> 01:01:57,340
水肺是一个有趣的系统，因为在

1704
01:01:57,340 --> 01:01:59,830
他们的世界里，这不是高价值的

1705
01:01:59,830 --> 01:02:01,990
数据，它不像你的时间线

1706
01:02:01,990 --> 01:02:03,430
或你所有的朋友

1707
01:02:03,430 --> 01:02:05,800
发消息垃圾，就像

1708
01:02:05,800 --> 01:02:07,390
他们可能会丢失他们不想丢失的数据，

1709
01:02:07,390 --> 01:02:10,900
但它不像

1710
01:02:10,900 --> 01:02:14,830
如果这种情况消失，那么理想情况下，如果

1711
01:02:14,830 --> 01:02:17,530
他们说一个节点回来了，并且

1712
01:02:17,530 --> 01:02:18,880
磁盘上没有任何内容，但共享

1713
01:02:18,880 --> 01:02:20,560
内存很抱歉，数据库系统

1714
01:02:20,560 --> 01:02:22,270
又回来了，磁盘上没有任何内容，

1715
01:02:22,270 --> 01:02:23,680
所有内容都在共享内存中，但

1716
01:02:23,680 --> 01:02:25,180
共享内存数据不兼容，那么他们就会赔钱

1717
01:02:25,180 --> 01:02:26,260
使用我们的新版本软件，

1718
01:02:26,260 --> 01:02:28,510
然后他们会从另一个磁盘回填它，

1719
01:02:28,510 --> 01:02:30,400
以便在他们的世界中获得一些结果

1720
01:02:30,400 --> 01:02:33,130
，这没关系，所以我喜欢这个

1721
01:02:33,130 --> 01:02:34,540
想法我不知道其他人是否这样做

1722
01:02:34,540 --> 01:02:37,450
这与共享内存最著名的

1723
01:02:37,450 --> 01:02:39,100
共享内存系统是 Postgres 但

1724
01:02:39,100 --> 01:02:40,930
它们显然不在内存中

1725
01:02:40,930 --> 01:02:42,580
他们这样做是为了在

1726
01:02:42,580 --> 01:02:45,280
不同的进程之间进行协调 这就像

1727
01:02:45,280 --> 01:02:48,370
现在这是一个有趣的想法，

1728
01:02:48,370 --> 01:02:50,950
因为它正在

1729
01:02:50,950 --> 01:02:52,900
从 进程的一个实例到下一个实例，

1730
01:02:52,900 --> 01:02:54,610
即使它们实际上并没有

1731
01:02:54,610 --> 01:02:56,920
在时间上重叠，但它们允许

1732
01:02:56,920 --> 01:03:00,280
数据库的内存超出

1733
01:03:00,280 --> 01:03:02,230
数据系统进程本身的生命周期，

1734
01:03:02,230 --> 01:03:05,410
因为

1735
01:03:05,410 --> 01:03:09,190
如果我的数据库，我再次发现关于此的任何问题都非常有趣

1736
01:03:09,190 --> 01:03:12,490
是 1 TB，如果我没有

1737
01:03:12,490 --> 01:03:13,750
这种技术，然后我重新启动

1738
01:03:13,750 --> 01:03:15,550
数据库，那么我必须

1739
01:03:15,550 --> 01:03:17,050
从磁盘中吸收 1 TB，这可能会很慢，

1740
01:03:17,050 --> 01:03:19,360
但在这种情况下，我可以回来

1741
01:03:19,360 --> 01:03:20,860
并立即拥有

1742
01:03:20,860 --> 01:03:27,220
我需要的一切，一切都好 对，所以只是为了

1743
01:03:27,220 --> 01:03:30,670
完成主要的收获

1744
01:03:30,670 --> 01:03:32,620
是物理日志记录可能是

1745
01:03:32,620 --> 01:03:33,700
您想要

1746
01:03:33,700 --> 01:03:35,920
用于内存数据的最佳方法是它会

1747
01:03:35,920 --> 01:03:37,450
支持所有位置 可靠的上下文方案

1748
01:03:37,450 --> 01:03:39,850
有一些我们可以

1749
01:03:39,850 --> 01:03:41,980
利用的优势，

1750
01:03:41,980 --> 01:03:44,500
如果我们使用 MVCC，我们可以利用我们利用的东西，例如

1751
01:03:44,500 --> 01:03:47,110
在更新时进行复制以获得一致的检查点

1752
01:03:47,110 --> 01:03:49,360
，只要您知道依靠

1753
01:03:49,360 --> 01:03:49,720
快照

1754
01:03:49,720 --> 01:03:51,580
隔离的想法只看到更改 来自

1755
01:03:51,580 --> 01:03:52,510
已经提交的事务

1756
01:03:52,510 --> 01:03:54,910
，正如我将在本学期末讨论的那样

1757
01:03:54,910 --> 01:03:57,250
，非易失性存储器在

1758
01:03:57,250 --> 01:03:59,560
这里将改变我们想要执行

1759
01:03:59,560 --> 01:04:01,119
其中一些登录前期协议的方式，

1760
01:04:01,119 --> 01:04:05,349
但高级想法仍然存在

1761
01:04:05,349 --> 01:04:07,930
大致相同，如果我们小心存储数据的位置，我们

1762
01:04:07,930 --> 01:04:10,630
可能不需要恢复或什至不需要记录任何

1763
01:04:10,630 --> 01:04:12,760
撤消信息，

1764
01:04:12,760 --> 01:04:14,440
那么我们只需要

1765
01:04:14,440 --> 01:04:16,660
跟踪更新信息，这

1766
01:04:16,660 --> 01:04:20,220
使得重放法则变得非常重要 更快

1767
01:04:20,220 --> 01:04:22,599
好吧 好吧 所以下节课我们将讨论

1768
01:04:22,599 --> 01:04:24,400
网络协议 我没有

1769
01:04:24,400 --> 01:04:25,540
这里的列表 但我们也会

1770
01:04:25,540 --> 01:04:28,300


1771
01:04:28,300 --> 01:04:29,640


1772
01:04:29,640 --> 01:04:33,640
介绍项目 3 因为那是 p

1773
01:04:33,640 --> 01:04:35,619
项目项目 你将成为一个小组项目 好的，

1774
01:04:35,619 --> 01:04:39,280
如果你找不到一个小组，请给

1775
01:04:39,280 --> 01:04:40,330
我发一封电子邮件，我们会

1776
01:04:40,330 --> 01:04:42,700
为你找出一些东西 好的 我忘记

1777
01:04:42,700 --> 01:04:43,720
了班上有多少学生 我认为没有

1778
01:04:43,720 --> 01:04:45,160
多少知识 通过我们应该有

1779
01:04:45,160 --> 01:04:47,920
足够的时间来完成 3 我认为 13 个组

1780
01:04:47,920 --> 01:04:49,630
是 3 或类似的东西

1781
01:04:49,630 --> 01:05:00,790
是的，那是 B 3 好的所以结交朋友

1782
01:05:00,790 --> 01:05:02,890
，无论你在

1783
01:05:02,890 --> 01:05:04,420
小组中为项目 3 服务的人都很好 对不起，

1784
01:05:04,420 --> 01:05:06,190
项目 2 也会 与

1785
01:05:06,190 --> 01:05:07,869
项目三在同一组，所以如果有人

1786
01:05:07,869 --> 01:05:11,320
喜欢卫生问题，你知道如果你

1787
01:05:11,320 --> 01:05:12,640
知道如果你不能忍受运行项目 2

1788
01:05:12,640 --> 01:05:13,839
那么你必须给一个项目 3

1789
01:05:13,839 --> 01:05:15,849
，那不会很好，我

1790
01:05:15,849 --> 01:05:17,560
5 打架我不知道

1791
01:05:17,560 --> 01:05:19,000
4 我可以再做一次，理想情况下

1792
01:05:19,000 --> 01:05:22,349
不想这样做 任何问题

1793
01:05:22,349 --> 01:05:25,330
银行它在旁边的公园 这是什么

1794
01:05:25,330 --> 01:05:27,460
一些老傻瓜嘿，真正的

1795
01:05:27,460 --> 01:05:28,760
[音乐]

1796
01:05:28,760 --> 01:05:31,040
婊子不是 在这里，它被称为

1797
01:05:31,040 --> 01:05:33,920
整个它，因为我把冰块放在暴躁的冰块上，

1798
01:05:33,920 --> 01:05:37,250
你看，它是去抓住

1799
01:05:37,250 --> 01:05:39,920
我 四十只是为了得到我的流行歌曲因为

1800
01:05:39,920 --> 01:05:43,090
我需要更多的踢

1801
01:05:43,090 --> 01:05:46,060
[音乐]

1802
01:05:46,060 --> 01:05:50,450
有一个很好的我的引擎盖不会

1803
01:05:50,450 --> 01:05:55,510
说我很高兴接受说我庆祝

